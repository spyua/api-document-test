### YamlMime:ManagedReference
items:
- uid: Cathay.SDK.Cloud.Interface.StoragePath
  commentId: T:Cathay.SDK.Cloud.Interface.StoragePath
  id: StoragePath
  parent: Cathay.SDK.Cloud.Interface
  children:
  - Cathay.SDK.Cloud.Interface.StoragePath.Combine(System.Collections.Generic.IEnumerable{System.String})
  - Cathay.SDK.Cloud.Interface.StoragePath.Combine(System.String[])
  - Cathay.SDK.Cloud.Interface.StoragePath.GetParent(System.String)
  - Cathay.SDK.Cloud.Interface.StoragePath.IsRootPath(System.String)
  - Cathay.SDK.Cloud.Interface.StoragePath.LevelUpFolderName
  - Cathay.SDK.Cloud.Interface.StoragePath.Normalize(System.String,System.Boolean)
  - Cathay.SDK.Cloud.Interface.StoragePath.NormalizePart(System.String)
  - Cathay.SDK.Cloud.Interface.StoragePath.PathSeparator
  - Cathay.SDK.Cloud.Interface.StoragePath.PathSeparatorString
  - Cathay.SDK.Cloud.Interface.StoragePath.Rename(System.String,System.String)
  - Cathay.SDK.Cloud.Interface.StoragePath.RootFolderPath
  - Cathay.SDK.Cloud.Interface.StoragePath.Split(System.String)
  langs:
  - csharp
  - vb
  name: StoragePath
  nameWithType: StoragePath
  fullName: Cathay.SDK.Cloud.Interface.StoragePath
  type: Class
  source:
    remote:
      path: Storage/StoragePath.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: StoragePath
    path: ../Storage/StoragePath.cs
    startLine: 5
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface
  summary: Storage Path utilities
  example: []
  syntax:
    content: public static class StoragePath
    content.vb: Public Module StoragePath
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Cathay.SDK.Cloud.Interface.StoragePath.PathSeparator
  commentId: F:Cathay.SDK.Cloud.Interface.StoragePath.PathSeparator
  id: PathSeparator
  parent: Cathay.SDK.Cloud.Interface.StoragePath
  langs:
  - csharp
  - vb
  name: PathSeparator
  nameWithType: StoragePath.PathSeparator
  fullName: Cathay.SDK.Cloud.Interface.StoragePath.PathSeparator
  type: Field
  source:
    remote:
      path: Storage/StoragePath.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: PathSeparator
    path: ../Storage/StoragePath.cs
    startLine: 10
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface
  summary: Character used to split paths
  example: []
  syntax:
    content: public const char PathSeparator = '/'
    return:
      type: System.Char
    content.vb: Public Const PathSeparator As Char = "/"c
- uid: Cathay.SDK.Cloud.Interface.StoragePath.PathSeparatorString
  commentId: F:Cathay.SDK.Cloud.Interface.StoragePath.PathSeparatorString
  id: PathSeparatorString
  parent: Cathay.SDK.Cloud.Interface.StoragePath
  langs:
  - csharp
  - vb
  name: PathSeparatorString
  nameWithType: StoragePath.PathSeparatorString
  fullName: Cathay.SDK.Cloud.Interface.StoragePath.PathSeparatorString
  type: Field
  source:
    remote:
      path: Storage/StoragePath.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: PathSeparatorString
    path: ../Storage/StoragePath.cs
    startLine: 15
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface
  summary: Character used to split paths as a string value
  example: []
  syntax:
    content: public static readonly string PathSeparatorString
    return:
      type: System.String
    content.vb: Public Shared ReadOnly PathSeparatorString As String
- uid: Cathay.SDK.Cloud.Interface.StoragePath.RootFolderPath
  commentId: F:Cathay.SDK.Cloud.Interface.StoragePath.RootFolderPath
  id: RootFolderPath
  parent: Cathay.SDK.Cloud.Interface.StoragePath
  langs:
  - csharp
  - vb
  name: RootFolderPath
  nameWithType: StoragePath.RootFolderPath
  fullName: Cathay.SDK.Cloud.Interface.StoragePath.RootFolderPath
  type: Field
  source:
    remote:
      path: Storage/StoragePath.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: RootFolderPath
    path: ../Storage/StoragePath.cs
    startLine: 20
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface
  summary: Returns '/'
  example: []
  syntax:
    content: public static readonly string RootFolderPath
    return:
      type: System.String
    content.vb: Public Shared ReadOnly RootFolderPath As String
- uid: Cathay.SDK.Cloud.Interface.StoragePath.LevelUpFolderName
  commentId: F:Cathay.SDK.Cloud.Interface.StoragePath.LevelUpFolderName
  id: LevelUpFolderName
  parent: Cathay.SDK.Cloud.Interface.StoragePath
  langs:
  - csharp
  - vb
  name: LevelUpFolderName
  nameWithType: StoragePath.LevelUpFolderName
  fullName: Cathay.SDK.Cloud.Interface.StoragePath.LevelUpFolderName
  type: Field
  source:
    remote:
      path: Storage/StoragePath.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: LevelUpFolderName
    path: ../Storage/StoragePath.cs
    startLine: 25
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface
  summary: Folder name for leveling up the path
  example: []
  syntax:
    content: public static readonly string LevelUpFolderName
    return:
      type: System.String
    content.vb: Public Shared ReadOnly LevelUpFolderName As String
- uid: Cathay.SDK.Cloud.Interface.StoragePath.Combine(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Cathay.SDK.Cloud.Interface.StoragePath.Combine(System.Collections.Generic.IEnumerable{System.String})
  id: Combine(System.Collections.Generic.IEnumerable{System.String})
  parent: Cathay.SDK.Cloud.Interface.StoragePath
  langs:
  - csharp
  - vb
  name: Combine(IEnumerable<string>)
  nameWithType: StoragePath.Combine(IEnumerable<string>)
  fullName: Cathay.SDK.Cloud.Interface.StoragePath.Combine(System.Collections.Generic.IEnumerable<string>)
  type: Method
  source:
    remote:
      path: Storage/StoragePath.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: Combine
    path: ../Storage/StoragePath.cs
    startLine: 32
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface
  summary: Combines parts of path
  example: []
  syntax:
    content: public static string Combine(IEnumerable<string> parts)
    parameters:
    - id: parts
      type: System.Collections.Generic.IEnumerable{System.String}
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function Combine(parts As IEnumerable(Of String)) As String
  overload: Cathay.SDK.Cloud.Interface.StoragePath.Combine*
  nameWithType.vb: StoragePath.Combine(IEnumerable(Of String))
  fullName.vb: Cathay.SDK.Cloud.Interface.StoragePath.Combine(System.Collections.Generic.IEnumerable(Of String))
  name.vb: Combine(IEnumerable(Of String))
- uid: Cathay.SDK.Cloud.Interface.StoragePath.GetParent(System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.StoragePath.GetParent(System.String)
  id: GetParent(System.String)
  parent: Cathay.SDK.Cloud.Interface.StoragePath
  langs:
  - csharp
  - vb
  name: GetParent(string)
  nameWithType: StoragePath.GetParent(string)
  fullName: Cathay.SDK.Cloud.Interface.StoragePath.GetParent(string)
  type: Method
  source:
    remote:
      path: Storage/StoragePath.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: GetParent
    path: ../Storage/StoragePath.cs
    startLine: 42
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface
  summary: Gets parent path of this item.
  example: []
  syntax:
    content: public static string GetParent(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetParent(path As String) As String
  overload: Cathay.SDK.Cloud.Interface.StoragePath.GetParent*
  nameWithType.vb: StoragePath.GetParent(String)
  fullName.vb: Cathay.SDK.Cloud.Interface.StoragePath.GetParent(String)
  name.vb: GetParent(String)
- uid: Cathay.SDK.Cloud.Interface.StoragePath.Combine(System.String[])
  commentId: M:Cathay.SDK.Cloud.Interface.StoragePath.Combine(System.String[])
  id: Combine(System.String[])
  parent: Cathay.SDK.Cloud.Interface.StoragePath
  langs:
  - csharp
  - vb
  name: Combine(params string[])
  nameWithType: StoragePath.Combine(params string[])
  fullName: Cathay.SDK.Cloud.Interface.StoragePath.Combine(params string[])
  type: Method
  source:
    remote:
      path: Storage/StoragePath.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: Combine
    path: ../Storage/StoragePath.cs
    startLine: 61
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface
  summary: Combines parts of path
  example: []
  syntax:
    content: public static string Combine(params string[] parts)
    parameters:
    - id: parts
      type: System.String[]
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function Combine(ParamArray parts As String()) As String
  overload: Cathay.SDK.Cloud.Interface.StoragePath.Combine*
  nameWithType.vb: StoragePath.Combine(ParamArray String())
  fullName.vb: Cathay.SDK.Cloud.Interface.StoragePath.Combine(ParamArray String())
  name.vb: Combine(ParamArray String())
- uid: Cathay.SDK.Cloud.Interface.StoragePath.Normalize(System.String,System.Boolean)
  commentId: M:Cathay.SDK.Cloud.Interface.StoragePath.Normalize(System.String,System.Boolean)
  id: Normalize(System.String,System.Boolean)
  parent: Cathay.SDK.Cloud.Interface.StoragePath
  langs:
  - csharp
  - vb
  name: Normalize(string, bool)
  nameWithType: StoragePath.Normalize(string, bool)
  fullName: Cathay.SDK.Cloud.Interface.StoragePath.Normalize(string, bool)
  type: Method
  source:
    remote:
      path: Storage/StoragePath.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: Normalize
    path: ../Storage/StoragePath.cs
    startLine: 73
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface
  summary: >-
    Normalizes path. Normalisation makes sure that:

    - When path is null or empty returns root path '/'

    - path separators are trimmed from both ends
  example: []
  syntax:
    content: public static string Normalize(string path, bool removeTrailingSlash = false)
    parameters:
    - id: path
      type: System.String
      description: ''
    - id: removeTrailingSlash
      type: System.Boolean
      description: ''
    return:
      type: System.String
    content.vb: Public Shared Function Normalize(path As String, removeTrailingSlash As Boolean = False) As String
  overload: Cathay.SDK.Cloud.Interface.StoragePath.Normalize*
  nameWithType.vb: StoragePath.Normalize(String, Boolean)
  fullName.vb: Cathay.SDK.Cloud.Interface.StoragePath.Normalize(String, Boolean)
  name.vb: Normalize(String, Boolean)
- uid: Cathay.SDK.Cloud.Interface.StoragePath.NormalizePart(System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.StoragePath.NormalizePart(System.String)
  id: NormalizePart(System.String)
  parent: Cathay.SDK.Cloud.Interface.StoragePath
  langs:
  - csharp
  - vb
  name: NormalizePart(string)
  nameWithType: StoragePath.NormalizePart(string)
  fullName: Cathay.SDK.Cloud.Interface.StoragePath.NormalizePart(string)
  type: Method
  source:
    remote:
      path: Storage/StoragePath.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: NormalizePart
    path: ../Storage/StoragePath.cs
    startLine: 107
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface
  summary: Normalizes path part
  example: []
  syntax:
    content: public static string NormalizePart(string part)
    parameters:
    - id: part
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function NormalizePart(part As String) As String
  overload: Cathay.SDK.Cloud.Interface.StoragePath.NormalizePart*
  nameWithType.vb: StoragePath.NormalizePart(String)
  fullName.vb: Cathay.SDK.Cloud.Interface.StoragePath.NormalizePart(String)
  name.vb: NormalizePart(String)
- uid: Cathay.SDK.Cloud.Interface.StoragePath.Split(System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.StoragePath.Split(System.String)
  id: Split(System.String)
  parent: Cathay.SDK.Cloud.Interface.StoragePath
  langs:
  - csharp
  - vb
  name: Split(string)
  nameWithType: StoragePath.Split(string)
  fullName: Cathay.SDK.Cloud.Interface.StoragePath.Split(string)
  type: Method
  source:
    remote:
      path: Storage/StoragePath.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: Split
    path: ../Storage/StoragePath.cs
    startLine: 119
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface
  summary: >-
    Splits path in parts. Leading and trailing path separators are totally ignored. Note that it returns

    null if input path is null. Parent folder signatures are returned as a part of split, they are not removed.

    If you want to get an absolute normalized path use <xref href="Cathay.SDK.Cloud.Interface.StoragePath.Normalize(System.String%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static string[] Split(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.String[]
    content.vb: Public Shared Function Split(path As String) As String()
  overload: Cathay.SDK.Cloud.Interface.StoragePath.Split*
  nameWithType.vb: StoragePath.Split(String)
  fullName.vb: Cathay.SDK.Cloud.Interface.StoragePath.Split(String)
  name.vb: Split(String)
- uid: Cathay.SDK.Cloud.Interface.StoragePath.IsRootPath(System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.StoragePath.IsRootPath(System.String)
  id: IsRootPath(System.String)
  parent: Cathay.SDK.Cloud.Interface.StoragePath
  langs:
  - csharp
  - vb
  name: IsRootPath(string)
  nameWithType: StoragePath.IsRootPath(string)
  fullName: Cathay.SDK.Cloud.Interface.StoragePath.IsRootPath(string)
  type: Method
  source:
    remote:
      path: Storage/StoragePath.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: IsRootPath
    path: ../Storage/StoragePath.cs
    startLine: 129
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface
  summary: Checks if path is root folder path, which can be an empty string, null, or the actual root path.
  example: []
  syntax:
    content: public static bool IsRootPath(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsRootPath(path As String) As Boolean
  overload: Cathay.SDK.Cloud.Interface.StoragePath.IsRootPath*
  nameWithType.vb: StoragePath.IsRootPath(String)
  fullName.vb: Cathay.SDK.Cloud.Interface.StoragePath.IsRootPath(String)
  name.vb: IsRootPath(String)
- uid: Cathay.SDK.Cloud.Interface.StoragePath.Rename(System.String,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.StoragePath.Rename(System.String,System.String)
  id: Rename(System.String,System.String)
  parent: Cathay.SDK.Cloud.Interface.StoragePath
  langs:
  - csharp
  - vb
  name: Rename(string, string)
  nameWithType: StoragePath.Rename(string, string)
  fullName: Cathay.SDK.Cloud.Interface.StoragePath.Rename(string, string)
  type: Method
  source:
    remote:
      path: Storage/StoragePath.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: Rename
    path: ../Storage/StoragePath.cs
    startLine: 140
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface
  summary: Replace file name
  example: []
  syntax:
    content: public static string Rename(string path, string newFileName)
    parameters:
    - id: path
      type: System.String
      description: ''
    - id: newFileName
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function Rename(path As String, newFileName As String) As String
  overload: Cathay.SDK.Cloud.Interface.StoragePath.Rename*
  nameWithType.vb: StoragePath.Rename(String, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.StoragePath.Rename(String, String)
  name.vb: Rename(String, String)
references:
- uid: Cathay.SDK.Cloud.Interface
  commentId: N:Cathay.SDK.Cloud.Interface
  href: Cathay.html
  name: Cathay.SDK.Cloud.Interface
  nameWithType: Cathay.SDK.Cloud.Interface
  fullName: Cathay.SDK.Cloud.Interface
  spec.csharp:
  - uid: Cathay
    name: Cathay
    href: Cathay.html
  - name: .
  - uid: Cathay.SDK
    name: SDK
    href: Cathay.SDK.html
  - name: .
  - uid: Cathay.SDK.Cloud
    name: Cloud
    href: Cathay.SDK.Cloud.html
  - name: .
  - uid: Cathay.SDK.Cloud.Interface
    name: Interface
    href: Cathay.SDK.Cloud.Interface.html
  spec.vb:
  - uid: Cathay
    name: Cathay
    href: Cathay.html
  - name: .
  - uid: Cathay.SDK
    name: SDK
    href: Cathay.SDK.html
  - name: .
  - uid: Cathay.SDK.Cloud
    name: Cloud
    href: Cathay.SDK.Cloud.html
  - name: .
  - uid: Cathay.SDK.Cloud.Interface
    name: Interface
    href: Cathay.SDK.Cloud.Interface.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Cathay.SDK.Cloud.Interface.StoragePath.Combine*
  commentId: Overload:Cathay.SDK.Cloud.Interface.StoragePath.Combine
  href: Cathay.SDK.Cloud.Interface.StoragePath.html#Cathay.SDK.Cloud.Interface.StoragePath.Combine(System.Collections.Generic.IEnumerable{System.String})
  name: Combine
  nameWithType: StoragePath.Combine
  fullName: Cathay.SDK.Cloud.Interface.StoragePath.Combine
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Cathay.SDK.Cloud.Interface.StoragePath.GetParent*
  commentId: Overload:Cathay.SDK.Cloud.Interface.StoragePath.GetParent
  href: Cathay.SDK.Cloud.Interface.StoragePath.html#Cathay.SDK.Cloud.Interface.StoragePath.GetParent(System.String)
  name: GetParent
  nameWithType: StoragePath.GetParent
  fullName: Cathay.SDK.Cloud.Interface.StoragePath.GetParent
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Cathay.SDK.Cloud.Interface.StoragePath.Normalize*
  commentId: Overload:Cathay.SDK.Cloud.Interface.StoragePath.Normalize
  href: Cathay.SDK.Cloud.Interface.StoragePath.html#Cathay.SDK.Cloud.Interface.StoragePath.Normalize(System.String,System.Boolean)
  name: Normalize
  nameWithType: StoragePath.Normalize
  fullName: Cathay.SDK.Cloud.Interface.StoragePath.Normalize
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Cathay.SDK.Cloud.Interface.StoragePath.NormalizePart*
  commentId: Overload:Cathay.SDK.Cloud.Interface.StoragePath.NormalizePart
  href: Cathay.SDK.Cloud.Interface.StoragePath.html#Cathay.SDK.Cloud.Interface.StoragePath.NormalizePart(System.String)
  name: NormalizePart
  nameWithType: StoragePath.NormalizePart
  fullName: Cathay.SDK.Cloud.Interface.StoragePath.NormalizePart
- uid: Cathay.SDK.Cloud.Interface.StoragePath.Normalize(System.String,System.Boolean)
  commentId: M:Cathay.SDK.Cloud.Interface.StoragePath.Normalize(System.String,System.Boolean)
  isExternal: true
  href: Cathay.SDK.Cloud.Interface.StoragePath.html#Cathay.SDK.Cloud.Interface.StoragePath.Normalize(System.String,System.Boolean)
  name: Normalize(string, bool)
  nameWithType: StoragePath.Normalize(string, bool)
  fullName: Cathay.SDK.Cloud.Interface.StoragePath.Normalize(string, bool)
  nameWithType.vb: StoragePath.Normalize(String, Boolean)
  fullName.vb: Cathay.SDK.Cloud.Interface.StoragePath.Normalize(String, Boolean)
  name.vb: Normalize(String, Boolean)
  spec.csharp:
  - uid: Cathay.SDK.Cloud.Interface.StoragePath.Normalize(System.String,System.Boolean)
    name: Normalize
    href: Cathay.SDK.Cloud.Interface.StoragePath.html#Cathay.SDK.Cloud.Interface.StoragePath.Normalize(System.String,System.Boolean)
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Cathay.SDK.Cloud.Interface.StoragePath.Normalize(System.String,System.Boolean)
    name: Normalize
    href: Cathay.SDK.Cloud.Interface.StoragePath.html#Cathay.SDK.Cloud.Interface.StoragePath.Normalize(System.String,System.Boolean)
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Cathay.SDK.Cloud.Interface.StoragePath.Split*
  commentId: Overload:Cathay.SDK.Cloud.Interface.StoragePath.Split
  href: Cathay.SDK.Cloud.Interface.StoragePath.html#Cathay.SDK.Cloud.Interface.StoragePath.Split(System.String)
  name: Split
  nameWithType: StoragePath.Split
  fullName: Cathay.SDK.Cloud.Interface.StoragePath.Split
- uid: Cathay.SDK.Cloud.Interface.StoragePath.IsRootPath*
  commentId: Overload:Cathay.SDK.Cloud.Interface.StoragePath.IsRootPath
  href: Cathay.SDK.Cloud.Interface.StoragePath.html#Cathay.SDK.Cloud.Interface.StoragePath.IsRootPath(System.String)
  name: IsRootPath
  nameWithType: StoragePath.IsRootPath
  fullName: Cathay.SDK.Cloud.Interface.StoragePath.IsRootPath
- uid: Cathay.SDK.Cloud.Interface.StoragePath.Rename*
  commentId: Overload:Cathay.SDK.Cloud.Interface.StoragePath.Rename
  href: Cathay.SDK.Cloud.Interface.StoragePath.html#Cathay.SDK.Cloud.Interface.StoragePath.Rename(System.String,System.String)
  name: Rename
  nameWithType: StoragePath.Rename
  fullName: Cathay.SDK.Cloud.Interface.StoragePath.Rename
