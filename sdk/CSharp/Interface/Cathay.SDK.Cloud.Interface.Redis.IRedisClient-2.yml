### YamlMime:ManagedReference
items:
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  commentId: T:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  id: IRedisClient`2
  parent: Cathay.SDK.Cloud.Interface.Redis
  children:
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Append(System.String,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Decr(System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.DecrBy(System.String,System.Int64)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Del(System.String[])
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Exists(System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Expire(System.String,System.Int32)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ExpireAt(System.String,System.Int64)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Get(System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.GetBit(System.String,System.Int32)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.GetRange(System.String,System.Int32,System.Int32)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HDel(System.String,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HExists(System.String,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HGet(System.String,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HGetAll(System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HIncrby(System.String,System.String,System.Int32)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HIncrbyFloat(System.String,System.String,System.Double)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HKeys(System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HLen(System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HMGet(System.String,System.String[])
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HSet(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HSet(System.String,System.String,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HSetNX(System.String,System.String,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HVals(System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Incr(System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.IncrBy(System.String,System.Int64)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.IncrByFloat(System.String,System.Double)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LIndex(System.String,System.Int32)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LInsert(System.String,System.Boolean,System.String,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LLen(System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LPop(System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LPush(System.String,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LPushX(System.String,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LRange(System.String,System.Int32,System.Int32)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LRem(System.String,System.Int32,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LSet(System.String,System.Int32,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LTrim(System.String,System.Int32,System.Int32)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.MGet(System.String[])
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.MSet(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.MSetNX(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.PExpire(System.String,System.Int64)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.PExpireAt(System.String,System.Int64)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.PTtl(System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Persist(System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Quit
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RPop(System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RPush(System.String,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RPushX(System.String,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RandomKey
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Rename(System.String,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RenameNX(System.String,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SAdd(System.String,System.Collections.Generic.IEnumerable{System.String})
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SAdd(System.String,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SCard(System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SDiff(System.String,System.String[])
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SDiffStore(System.String,System.String,System.String[])
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SInter(System.String[])
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SInterStore(System.String,System.String[])
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SIsMember(System.String,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SMembers(System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SMove(System.String,System.String,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SPop(System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SPop(System.String,System.Int32)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SRandMember(System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SRem(System.String,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SUnion(System.String[])
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SUnionStore(System.String,System.String[])
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Set(System.String,System.Int32,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Set(System.String,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SetBit(System.String,System.Int32,System.Boolean)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SetRange(System.String,System.Int32,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Sort(System.String,`0,`1)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.StrLen(System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Ttl(System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Type(System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.UnWatch
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Watch(System.String[])
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZAdd(System.String,System.Double,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZAdd(System.String,System.Int64,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZCard(System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZIncrBy(System.String,System.Double,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZIncrBy(System.String,System.Int64,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZInterStore(System.String,System.String[])
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZLexCount(System.String,System.String,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRange(System.String,System.Int32,System.Int32)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByLex(System.String,System.String,System.String,System.Int32,System.Int32)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByScore(System.String,System.Double,System.Double,System.Int32,System.Int32)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByScore(System.String,System.Int64,System.Int64,System.Int32,System.Int32)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByScoreWithScores(System.String,System.Double,System.Double,System.Int32,System.Int32)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByScoreWithScores(System.String,System.Int64,System.Int64,System.Int32,System.Int32)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeWithScores(System.String,System.Int32,System.Int32)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRank(System.String,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRem(System.String,System.Collections.Generic.IEnumerable{System.String})
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRem(System.String,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRemRangeByLex(System.String,System.String,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRemRangeByRank(System.String,System.Int32,System.Int32)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRemRangeByScore(System.String,System.Double,System.Double)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRemRangeByScore(System.String,System.Int64,System.Int64)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRange(System.String,System.Int32,System.Int32)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeByScore(System.String,System.Double,System.Double,System.Int32,System.Int32)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeByScore(System.String,System.Int64,System.Int64,System.Int32,System.Int32)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeByScoreWithScores(System.String,System.Double,System.Double,System.Int32,System.Int32)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeByScoreWithScores(System.String,System.Int64,System.Int64,System.Int32,System.Int32)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeWithScores(System.String,System.Int32,System.Int32)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRank(System.String,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZScore(System.String,System.String)
  - Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZUnionStore(System.String,System.String[])
  langs:
  - csharp
  - vb
  name: IRedisClient<TOrder, TSortType>
  nameWithType: IRedisClient<TOrder, TSortType>
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>
  type: Interface
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: IRedisClient
    path: ../Redis/IRedisClient.cs
    startLine: 2
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: 'public interface IRedisClient<TOrder, TSortType> : IDisposable where TOrder : Enum where TSortType : Enum'
    typeParameters:
    - id: TOrder
    - id: TSortType
    content.vb: Public Interface IRedisClient(Of TOrder As [Enum], TSortType As [Enum]) Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  nameWithType.vb: IRedisClient(Of TOrder, TSortType)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType)
  name.vb: IRedisClient(Of TOrder, TSortType)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Quit
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Quit
  id: Quit
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: Quit()
  nameWithType: IRedisClient<TOrder, TSortType>.Quit()
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Quit()
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: Quit
    path: ../Redis/IRedisClient.cs
    startLine: 7
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: void Quit()
    content.vb: Sub Quit()
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Quit*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Quit()
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Quit()
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Type(System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Type(System.String)
  id: Type(System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: Type(string)
  nameWithType: IRedisClient<TOrder, TSortType>.Type(string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Type(string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: Type
    path: ../Redis/IRedisClient.cs
    startLine: 10
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: string Type(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: System.String
    content.vb: Function Type(key As String) As String
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Type*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Type(String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Type(String)
  name.vb: Type(String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Exists(System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Exists(System.String)
  id: Exists(System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: Exists(string)
  nameWithType: IRedisClient<TOrder, TSortType>.Exists(string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Exists(string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: Exists
    path: ../Redis/IRedisClient.cs
    startLine: 11
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: bool Exists(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function Exists(key As String) As Boolean
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Exists*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Exists(String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Exists(String)
  name.vb: Exists(String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.StrLen(System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.StrLen(System.String)
  id: StrLen(System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: StrLen(string)
  nameWithType: IRedisClient<TOrder, TSortType>.StrLen(string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.StrLen(string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: StrLen
    path: ../Redis/IRedisClient.cs
    startLine: 12
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long StrLen(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Int64
    content.vb: Function StrLen(key As String) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.StrLen*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).StrLen(String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).StrLen(String)
  name.vb: StrLen(String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Set(System.String,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Set(System.String,System.String)
  id: Set(System.String,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: Set(string, string)
  nameWithType: IRedisClient<TOrder, TSortType>.Set(string, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Set(string, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: Set
    path: ../Redis/IRedisClient.cs
    startLine: 13
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: void Set(string key, string value)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.String
    content.vb: Sub [Set](key As String, value As String)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Set*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Set(String, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Set(String, String)
  name.vb: Set(String, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Set(System.String,System.Int32,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Set(System.String,System.Int32,System.String)
  id: Set(System.String,System.Int32,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: Set(string, int, string)
  nameWithType: IRedisClient<TOrder, TSortType>.Set(string, int, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Set(string, int, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: Set
    path: ../Redis/IRedisClient.cs
    startLine: 14
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: void Set(string key, int expireInSeconds, string value)
    parameters:
    - id: key
      type: System.String
    - id: expireInSeconds
      type: System.Int32
    - id: value
      type: System.String
    content.vb: Sub [Set](key As String, expireInSeconds As Integer, value As String)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Set*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Set(String, Integer, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Set(String, Integer, String)
  name.vb: Set(String, Integer, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Persist(System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Persist(System.String)
  id: Persist(System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: Persist(string)
  nameWithType: IRedisClient<TOrder, TSortType>.Persist(string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Persist(string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: Persist
    path: ../Redis/IRedisClient.cs
    startLine: 15
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: bool Persist(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function Persist(key As String) As Boolean
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Persist*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Persist(String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Persist(String)
  name.vb: Persist(String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.MSet(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.MSet(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  id: MSet(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: MSet(IEnumerable<string>, IEnumerable<string>)
  nameWithType: IRedisClient<TOrder, TSortType>.MSet(IEnumerable<string>, IEnumerable<string>)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.MSet(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<string>)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: MSet
    path: ../Redis/IRedisClient.cs
    startLine: 16
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: void MSet(IEnumerable<string> keys, IEnumerable<string> values)
    parameters:
    - id: keys
      type: System.Collections.Generic.IEnumerable{System.String}
    - id: values
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Sub MSet(keys As IEnumerable(Of String), values As IEnumerable(Of String))
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.MSet*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).MSet(IEnumerable(Of String), IEnumerable(Of String))
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).MSet(System.Collections.Generic.IEnumerable(Of String), System.Collections.Generic.IEnumerable(Of String))
  name.vb: MSet(IEnumerable(Of String), IEnumerable(Of String))
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.MSetNX(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.MSetNX(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  id: MSetNX(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: MSetNX(IEnumerable<string>, IEnumerable<string>)
  nameWithType: IRedisClient<TOrder, TSortType>.MSetNX(IEnumerable<string>, IEnumerable<string>)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.MSetNX(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<string>)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: MSetNX
    path: ../Redis/IRedisClient.cs
    startLine: 17
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: bool MSetNX(IEnumerable<string> keys, IEnumerable<string> values)
    parameters:
    - id: keys
      type: System.Collections.Generic.IEnumerable{System.String}
    - id: values
      type: System.Collections.Generic.IEnumerable{System.String}
    return:
      type: System.Boolean
    content.vb: Function MSetNX(keys As IEnumerable(Of String), values As IEnumerable(Of String)) As Boolean
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.MSetNX*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).MSetNX(IEnumerable(Of String), IEnumerable(Of String))
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).MSetNX(System.Collections.Generic.IEnumerable(Of String), System.Collections.Generic.IEnumerable(Of String))
  name.vb: MSetNX(IEnumerable(Of String), IEnumerable(Of String))
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Get(System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Get(System.String)
  id: Get(System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: Get(string)
  nameWithType: IRedisClient<TOrder, TSortType>.Get(string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Get(string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: Get
    path: ../Redis/IRedisClient.cs
    startLine: 18
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: string Get(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: System.String
    content.vb: Function [Get](key As String) As String
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Get*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Get(String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Get(String)
  name.vb: Get(String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.MGet(System.String[])
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.MGet(System.String[])
  id: MGet(System.String[])
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: MGet(params string[])
  nameWithType: IRedisClient<TOrder, TSortType>.MGet(params string[])
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.MGet(params string[])
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: MGet
    path: ../Redis/IRedisClient.cs
    startLine: 19
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: List<string> MGet(params string[] keys)
    parameters:
    - id: keys
      type: System.String[]
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Function MGet(ParamArray keys As String()) As List(Of String)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.MGet*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).MGet(ParamArray String())
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).MGet(ParamArray String())
  name.vb: MGet(ParamArray String())
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Del(System.String[])
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Del(System.String[])
  id: Del(System.String[])
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: Del(params string[])
  nameWithType: IRedisClient<TOrder, TSortType>.Del(params string[])
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Del(params string[])
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: Del
    path: ../Redis/IRedisClient.cs
    startLine: 20
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: List<bool> Del(params string[] keys)
    parameters:
    - id: keys
      type: System.String[]
    return:
      type: System.Collections.Generic.List{System.Boolean}
    content.vb: Function Del(ParamArray keys As String()) As List(Of Boolean)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Del*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Del(ParamArray String())
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Del(ParamArray String())
  name.vb: Del(ParamArray String())
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Incr(System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Incr(System.String)
  id: Incr(System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: Incr(string)
  nameWithType: IRedisClient<TOrder, TSortType>.Incr(string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Incr(string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: Incr
    path: ../Redis/IRedisClient.cs
    startLine: 21
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long Incr(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Int64
    content.vb: Function Incr(key As String) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Incr*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Incr(String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Incr(String)
  name.vb: Incr(String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.IncrBy(System.String,System.Int64)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.IncrBy(System.String,System.Int64)
  id: IncrBy(System.String,System.Int64)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: IncrBy(string, long)
  nameWithType: IRedisClient<TOrder, TSortType>.IncrBy(string, long)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.IncrBy(string, long)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: IncrBy
    path: ../Redis/IRedisClient.cs
    startLine: 22
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long IncrBy(string key, long incrBy)
    parameters:
    - id: key
      type: System.String
    - id: incrBy
      type: System.Int64
    return:
      type: System.Int64
    content.vb: Function IncrBy(key As String, incrBy As Long) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.IncrBy*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).IncrBy(String, Long)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).IncrBy(String, Long)
  name.vb: IncrBy(String, Long)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.IncrByFloat(System.String,System.Double)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.IncrByFloat(System.String,System.Double)
  id: IncrByFloat(System.String,System.Double)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: IncrByFloat(string, double)
  nameWithType: IRedisClient<TOrder, TSortType>.IncrByFloat(string, double)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.IncrByFloat(string, double)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: IncrByFloat
    path: ../Redis/IRedisClient.cs
    startLine: 23
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: double IncrByFloat(string key, double incrBy)
    parameters:
    - id: key
      type: System.String
    - id: incrBy
      type: System.Double
    return:
      type: System.Double
    content.vb: Function IncrByFloat(key As String, incrBy As Double) As Double
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.IncrByFloat*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).IncrByFloat(String, Double)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).IncrByFloat(String, Double)
  name.vb: IncrByFloat(String, Double)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Decr(System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Decr(System.String)
  id: Decr(System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: Decr(string)
  nameWithType: IRedisClient<TOrder, TSortType>.Decr(string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Decr(string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: Decr
    path: ../Redis/IRedisClient.cs
    startLine: 24
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long Decr(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Int64
    content.vb: Function Decr(key As String) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Decr*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Decr(String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Decr(String)
  name.vb: Decr(String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.DecrBy(System.String,System.Int64)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.DecrBy(System.String,System.Int64)
  id: DecrBy(System.String,System.Int64)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: DecrBy(string, long)
  nameWithType: IRedisClient<TOrder, TSortType>.DecrBy(string, long)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.DecrBy(string, long)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: DecrBy
    path: ../Redis/IRedisClient.cs
    startLine: 25
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long DecrBy(string key, long decrBy)
    parameters:
    - id: key
      type: System.String
    - id: decrBy
      type: System.Int64
    return:
      type: System.Int64
    content.vb: Function DecrBy(key As String, decrBy As Long) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.DecrBy*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).DecrBy(String, Long)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).DecrBy(String, Long)
  name.vb: DecrBy(String, Long)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Append(System.String,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Append(System.String,System.String)
  id: Append(System.String,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: Append(string, string)
  nameWithType: IRedisClient<TOrder, TSortType>.Append(string, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Append(string, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: Append
    path: ../Redis/IRedisClient.cs
    startLine: 26
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long Append(string key, string value)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.String
    return:
      type: System.Int64
    content.vb: Function Append(key As String, value As String) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Append*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Append(String, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Append(String, String)
  name.vb: Append(String, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.GetRange(System.String,System.Int32,System.Int32)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.GetRange(System.String,System.Int32,System.Int32)
  id: GetRange(System.String,System.Int32,System.Int32)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: GetRange(string, int, int)
  nameWithType: IRedisClient<TOrder, TSortType>.GetRange(string, int, int)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.GetRange(string, int, int)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: GetRange
    path: ../Redis/IRedisClient.cs
    startLine: 27
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: string GetRange(string key, int fromIndex, int toIndex)
    parameters:
    - id: key
      type: System.String
    - id: fromIndex
      type: System.Int32
    - id: toIndex
      type: System.Int32
    return:
      type: System.String
    content.vb: Function GetRange(key As String, fromIndex As Integer, toIndex As Integer) As String
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.GetRange*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).GetRange(String, Integer, Integer)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).GetRange(String, Integer, Integer)
  name.vb: GetRange(String, Integer, Integer)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SetRange(System.String,System.Int32,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SetRange(System.String,System.Int32,System.String)
  id: SetRange(System.String,System.Int32,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: SetRange(string, int, string)
  nameWithType: IRedisClient<TOrder, TSortType>.SetRange(string, int, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SetRange(string, int, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: SetRange
    path: ../Redis/IRedisClient.cs
    startLine: 28
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long SetRange(string key, int offset, string value)
    parameters:
    - id: key
      type: System.String
    - id: offset
      type: System.Int32
    - id: value
      type: System.String
    return:
      type: System.Int64
    content.vb: Function SetRange(key As String, offset As Integer, value As String) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SetRange*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SetRange(String, Integer, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SetRange(String, Integer, String)
  name.vb: SetRange(String, Integer, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.GetBit(System.String,System.Int32)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.GetBit(System.String,System.Int32)
  id: GetBit(System.String,System.Int32)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: GetBit(string, int)
  nameWithType: IRedisClient<TOrder, TSortType>.GetBit(string, int)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.GetBit(string, int)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: GetBit
    path: ../Redis/IRedisClient.cs
    startLine: 29
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: bool GetBit(string key, int offset)
    parameters:
    - id: key
      type: System.String
    - id: offset
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Function GetBit(key As String, offset As Integer) As Boolean
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.GetBit*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).GetBit(String, Integer)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).GetBit(String, Integer)
  name.vb: GetBit(String, Integer)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SetBit(System.String,System.Int32,System.Boolean)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SetBit(System.String,System.Int32,System.Boolean)
  id: SetBit(System.String,System.Int32,System.Boolean)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: SetBit(string, int, bool)
  nameWithType: IRedisClient<TOrder, TSortType>.SetBit(string, int, bool)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SetBit(string, int, bool)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: SetBit
    path: ../Redis/IRedisClient.cs
    startLine: 30
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: bool SetBit(string key, int offset, bool bit)
    parameters:
    - id: key
      type: System.String
    - id: offset
      type: System.Int32
    - id: bit
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Function SetBit(key As String, offset As Integer, bit As Boolean) As Boolean
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SetBit*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SetBit(String, Integer, Boolean)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SetBit(String, Integer, Boolean)
  name.vb: SetBit(String, Integer, Boolean)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RandomKey
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RandomKey
  id: RandomKey
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: RandomKey()
  nameWithType: IRedisClient<TOrder, TSortType>.RandomKey()
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.RandomKey()
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: RandomKey
    path: ../Redis/IRedisClient.cs
    startLine: 32
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: string RandomKey()
    return:
      type: System.String
    content.vb: Function RandomKey() As String
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RandomKey*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).RandomKey()
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).RandomKey()
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Rename(System.String,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Rename(System.String,System.String)
  id: Rename(System.String,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: Rename(string, string)
  nameWithType: IRedisClient<TOrder, TSortType>.Rename(string, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Rename(string, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: Rename
    path: ../Redis/IRedisClient.cs
    startLine: 33
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: void Rename(string oldKeyName, string newKeyName)
    parameters:
    - id: oldKeyName
      type: System.String
    - id: newKeyName
      type: System.String
    content.vb: Sub Rename(oldKeyName As String, newKeyName As String)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Rename*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Rename(String, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Rename(String, String)
  name.vb: Rename(String, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RenameNX(System.String,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RenameNX(System.String,System.String)
  id: RenameNX(System.String,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: RenameNX(string, string)
  nameWithType: IRedisClient<TOrder, TSortType>.RenameNX(string, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.RenameNX(string, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: RenameNX
    path: ../Redis/IRedisClient.cs
    startLine: 34
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: bool RenameNX(string oldKeyName, string newKeyName)
    parameters:
    - id: oldKeyName
      type: System.String
    - id: newKeyName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function RenameNX(oldKeyName As String, newKeyName As String) As Boolean
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RenameNX*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).RenameNX(String, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).RenameNX(String, String)
  name.vb: RenameNX(String, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Expire(System.String,System.Int32)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Expire(System.String,System.Int32)
  id: Expire(System.String,System.Int32)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: Expire(string, int)
  nameWithType: IRedisClient<TOrder, TSortType>.Expire(string, int)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Expire(string, int)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: Expire
    path: ../Redis/IRedisClient.cs
    startLine: 35
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: bool Expire(string key, int seconds)
    parameters:
    - id: key
      type: System.String
    - id: seconds
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Function Expire(key As String, seconds As Integer) As Boolean
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Expire*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Expire(String, Integer)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Expire(String, Integer)
  name.vb: Expire(String, Integer)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.PExpire(System.String,System.Int64)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.PExpire(System.String,System.Int64)
  id: PExpire(System.String,System.Int64)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: PExpire(string, long)
  nameWithType: IRedisClient<TOrder, TSortType>.PExpire(string, long)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.PExpire(string, long)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: PExpire
    path: ../Redis/IRedisClient.cs
    startLine: 36
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: bool PExpire(string key, long ttlMs)
    parameters:
    - id: key
      type: System.String
    - id: ttlMs
      type: System.Int64
    return:
      type: System.Boolean
    content.vb: Function PExpire(key As String, ttlMs As Long) As Boolean
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.PExpire*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).PExpire(String, Long)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).PExpire(String, Long)
  name.vb: PExpire(String, Long)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ExpireAt(System.String,System.Int64)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ExpireAt(System.String,System.Int64)
  id: ExpireAt(System.String,System.Int64)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ExpireAt(string, long)
  nameWithType: IRedisClient<TOrder, TSortType>.ExpireAt(string, long)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ExpireAt(string, long)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ExpireAt
    path: ../Redis/IRedisClient.cs
    startLine: 37
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: bool ExpireAt(string key, long unixTime)
    parameters:
    - id: key
      type: System.String
    - id: unixTime
      type: System.Int64
    return:
      type: System.Boolean
    content.vb: Function ExpireAt(key As String, unixTime As Long) As Boolean
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ExpireAt*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ExpireAt(String, Long)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ExpireAt(String, Long)
  name.vb: ExpireAt(String, Long)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.PExpireAt(System.String,System.Int64)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.PExpireAt(System.String,System.Int64)
  id: PExpireAt(System.String,System.Int64)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: PExpireAt(string, long)
  nameWithType: IRedisClient<TOrder, TSortType>.PExpireAt(string, long)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.PExpireAt(string, long)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: PExpireAt
    path: ../Redis/IRedisClient.cs
    startLine: 38
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: bool PExpireAt(string key, long unixTimeMs)
    parameters:
    - id: key
      type: System.String
    - id: unixTimeMs
      type: System.Int64
    return:
      type: System.Boolean
    content.vb: Function PExpireAt(key As String, unixTimeMs As Long) As Boolean
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.PExpireAt*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).PExpireAt(String, Long)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).PExpireAt(String, Long)
  name.vb: PExpireAt(String, Long)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Ttl(System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Ttl(System.String)
  id: Ttl(System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: Ttl(string)
  nameWithType: IRedisClient<TOrder, TSortType>.Ttl(string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Ttl(string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: Ttl
    path: ../Redis/IRedisClient.cs
    startLine: 39
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long Ttl(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Int64
    content.vb: Function Ttl(key As String) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Ttl*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Ttl(String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Ttl(String)
  name.vb: Ttl(String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.PTtl(System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.PTtl(System.String)
  id: PTtl(System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: PTtl(string)
  nameWithType: IRedisClient<TOrder, TSortType>.PTtl(string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.PTtl(string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: PTtl
    path: ../Redis/IRedisClient.cs
    startLine: 40
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long PTtl(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Int64
    content.vb: Function PTtl(key As String) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.PTtl*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).PTtl(String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).PTtl(String)
  name.vb: PTtl(String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Sort(System.String,`0,`1)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Sort(System.String,`0,`1)
  id: Sort(System.String,`0,`1)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: Sort(string, TOrder, TSortType)
  nameWithType: IRedisClient<TOrder, TSortType>.Sort(string, TOrder, TSortType)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Sort(string, TOrder, TSortType)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: Sort
    path: ../Redis/IRedisClient.cs
    startLine: 43
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: IEnumerable<string> Sort(string listOrSetId, TOrder order = default, TSortType sortType = default)
    parameters:
    - id: listOrSetId
      type: System.String
    - id: order
      type: '{TOrder}'
    - id: sortType
      type: '{TSortType}'
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Function Sort(listOrSetId As String, order As TOrder = Nothing, sortType As TSortType = Nothing) As IEnumerable(Of String)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Sort*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Sort(String, TOrder, TSortType)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Sort(String, TOrder, TSortType)
  name.vb: Sort(String, TOrder, TSortType)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LRange(System.String,System.Int32,System.Int32)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LRange(System.String,System.Int32,System.Int32)
  id: LRange(System.String,System.Int32,System.Int32)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: LRange(string, int, int)
  nameWithType: IRedisClient<TOrder, TSortType>.LRange(string, int, int)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.LRange(string, int, int)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: LRange
    path: ../Redis/IRedisClient.cs
    startLine: 46
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: IEnumerable<string> LRange(string listId, int startingFrom, int endingAt)
    parameters:
    - id: listId
      type: System.String
    - id: startingFrom
      type: System.Int32
    - id: endingAt
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Function LRange(listId As String, startingFrom As Integer, endingAt As Integer) As IEnumerable(Of String)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LRange*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).LRange(String, Integer, Integer)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).LRange(String, Integer, Integer)
  name.vb: LRange(String, Integer, Integer)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RPush(System.String,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RPush(System.String,System.String)
  id: RPush(System.String,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: RPush(string, string)
  nameWithType: IRedisClient<TOrder, TSortType>.RPush(string, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.RPush(string, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: RPush
    path: ../Redis/IRedisClient.cs
    startLine: 47
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long RPush(string listId, string value)
    parameters:
    - id: listId
      type: System.String
    - id: value
      type: System.String
    return:
      type: System.Int64
    content.vb: Function RPush(listId As String, value As String) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RPush*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).RPush(String, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).RPush(String, String)
  name.vb: RPush(String, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RPushX(System.String,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RPushX(System.String,System.String)
  id: RPushX(System.String,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: RPushX(string, string)
  nameWithType: IRedisClient<TOrder, TSortType>.RPushX(string, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.RPushX(string, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: RPushX
    path: ../Redis/IRedisClient.cs
    startLine: 48
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long RPushX(string listId, string value)
    parameters:
    - id: listId
      type: System.String
    - id: value
      type: System.String
    return:
      type: System.Int64
    content.vb: Function RPushX(listId As String, value As String) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RPushX*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).RPushX(String, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).RPushX(String, String)
  name.vb: RPushX(String, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LPush(System.String,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LPush(System.String,System.String)
  id: LPush(System.String,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: LPush(string, string)
  nameWithType: IRedisClient<TOrder, TSortType>.LPush(string, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.LPush(string, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: LPush
    path: ../Redis/IRedisClient.cs
    startLine: 49
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long LPush(string listId, string value)
    parameters:
    - id: listId
      type: System.String
    - id: value
      type: System.String
    return:
      type: System.Int64
    content.vb: Function LPush(listId As String, value As String) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LPush*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).LPush(String, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).LPush(String, String)
  name.vb: LPush(String, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LPushX(System.String,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LPushX(System.String,System.String)
  id: LPushX(System.String,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: LPushX(string, string)
  nameWithType: IRedisClient<TOrder, TSortType>.LPushX(string, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.LPushX(string, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: LPushX
    path: ../Redis/IRedisClient.cs
    startLine: 50
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long LPushX(string listId, string value)
    parameters:
    - id: listId
      type: System.String
    - id: value
      type: System.String
    return:
      type: System.Int64
    content.vb: Function LPushX(listId As String, value As String) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LPushX*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).LPushX(String, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).LPushX(String, String)
  name.vb: LPushX(String, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LTrim(System.String,System.Int32,System.Int32)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LTrim(System.String,System.Int32,System.Int32)
  id: LTrim(System.String,System.Int32,System.Int32)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: LTrim(string, int, int)
  nameWithType: IRedisClient<TOrder, TSortType>.LTrim(string, int, int)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.LTrim(string, int, int)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: LTrim
    path: ../Redis/IRedisClient.cs
    startLine: 51
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: void LTrim(string listId, int keepStartingFrom, int keepEndingAt)
    parameters:
    - id: listId
      type: System.String
    - id: keepStartingFrom
      type: System.Int32
    - id: keepEndingAt
      type: System.Int32
    content.vb: Sub LTrim(listId As String, keepStartingFrom As Integer, keepEndingAt As Integer)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LTrim*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).LTrim(String, Integer, Integer)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).LTrim(String, Integer, Integer)
  name.vb: LTrim(String, Integer, Integer)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LRem(System.String,System.Int32,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LRem(System.String,System.Int32,System.String)
  id: LRem(System.String,System.Int32,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: LRem(string, int, string)
  nameWithType: IRedisClient<TOrder, TSortType>.LRem(string, int, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.LRem(string, int, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: LRem
    path: ../Redis/IRedisClient.cs
    startLine: 52
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long LRem(string listId, int removeNoOfMatches, string value)
    parameters:
    - id: listId
      type: System.String
    - id: removeNoOfMatches
      type: System.Int32
    - id: value
      type: System.String
    return:
      type: System.Int64
    content.vb: Function LRem(listId As String, removeNoOfMatches As Integer, value As String) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LRem*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).LRem(String, Integer, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).LRem(String, Integer, String)
  name.vb: LRem(String, Integer, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LLen(System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LLen(System.String)
  id: LLen(System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: LLen(string)
  nameWithType: IRedisClient<TOrder, TSortType>.LLen(string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.LLen(string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: LLen
    path: ../Redis/IRedisClient.cs
    startLine: 53
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long LLen(string listId)
    parameters:
    - id: listId
      type: System.String
    return:
      type: System.Int64
    content.vb: Function LLen(listId As String) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LLen*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).LLen(String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).LLen(String)
  name.vb: LLen(String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LIndex(System.String,System.Int32)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LIndex(System.String,System.Int32)
  id: LIndex(System.String,System.Int32)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: LIndex(string, int)
  nameWithType: IRedisClient<TOrder, TSortType>.LIndex(string, int)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.LIndex(string, int)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: LIndex
    path: ../Redis/IRedisClient.cs
    startLine: 54
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: string LIndex(string listId, int listIndex)
    parameters:
    - id: listId
      type: System.String
    - id: listIndex
      type: System.Int32
    return:
      type: System.String
    content.vb: Function LIndex(listId As String, listIndex As Integer) As String
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LIndex*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).LIndex(String, Integer)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).LIndex(String, Integer)
  name.vb: LIndex(String, Integer)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LInsert(System.String,System.Boolean,System.String,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LInsert(System.String,System.Boolean,System.String,System.String)
  id: LInsert(System.String,System.Boolean,System.String,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: LInsert(string, bool, string, string)
  nameWithType: IRedisClient<TOrder, TSortType>.LInsert(string, bool, string, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.LInsert(string, bool, string, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: LInsert
    path: ../Redis/IRedisClient.cs
    startLine: 55
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: void LInsert(string listId, bool insertBefore, string pivot, string value)
    parameters:
    - id: listId
      type: System.String
    - id: insertBefore
      type: System.Boolean
    - id: pivot
      type: System.String
    - id: value
      type: System.String
    content.vb: Sub LInsert(listId As String, insertBefore As Boolean, pivot As String, value As String)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LInsert*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).LInsert(String, Boolean, String, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).LInsert(String, Boolean, String, String)
  name.vb: LInsert(String, Boolean, String, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LSet(System.String,System.Int32,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LSet(System.String,System.Int32,System.String)
  id: LSet(System.String,System.Int32,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: LSet(string, int, string)
  nameWithType: IRedisClient<TOrder, TSortType>.LSet(string, int, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.LSet(string, int, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: LSet
    path: ../Redis/IRedisClient.cs
    startLine: 56
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: void LSet(string listId, int listIndex, string value)
    parameters:
    - id: listId
      type: System.String
    - id: listIndex
      type: System.Int32
    - id: value
      type: System.String
    content.vb: Sub LSet(listId As String, listIndex As Integer, value As String)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LSet*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).LSet(String, Integer, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).LSet(String, Integer, String)
  name.vb: LSet(String, Integer, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LPop(System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LPop(System.String)
  id: LPop(System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: LPop(string)
  nameWithType: IRedisClient<TOrder, TSortType>.LPop(string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.LPop(string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: LPop
    path: ../Redis/IRedisClient.cs
    startLine: 57
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: string LPop(string listId)
    parameters:
    - id: listId
      type: System.String
    return:
      type: System.String
    content.vb: Function LPop(listId As String) As String
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LPop*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).LPop(String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).LPop(String)
  name.vb: LPop(String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RPop(System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RPop(System.String)
  id: RPop(System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: RPop(string)
  nameWithType: IRedisClient<TOrder, TSortType>.RPop(string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.RPop(string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: RPop
    path: ../Redis/IRedisClient.cs
    startLine: 58
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: string RPop(string listId)
    parameters:
    - id: listId
      type: System.String
    return:
      type: System.String
    content.vb: Function RPop(listId As String) As String
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RPop*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).RPop(String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).RPop(String)
  name.vb: RPop(String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SMembers(System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SMembers(System.String)
  id: SMembers(System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: SMembers(string)
  nameWithType: IRedisClient<TOrder, TSortType>.SMembers(string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SMembers(string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: SMembers
    path: ../Redis/IRedisClient.cs
    startLine: 71
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: IEnumerable<string> SMembers(string setId)
    parameters:
    - id: setId
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Function SMembers(setId As String) As IEnumerable(Of String)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SMembers*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SMembers(String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SMembers(String)
  name.vb: SMembers(String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SAdd(System.String,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SAdd(System.String,System.String)
  id: SAdd(System.String,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: SAdd(string, string)
  nameWithType: IRedisClient<TOrder, TSortType>.SAdd(string, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SAdd(string, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: SAdd
    path: ../Redis/IRedisClient.cs
    startLine: 72
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: bool SAdd(string setId, string value)
    parameters:
    - id: setId
      type: System.String
    - id: value
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function SAdd(setId As String, value As String) As Boolean
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SAdd*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SAdd(String, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SAdd(String, String)
  name.vb: SAdd(String, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SAdd(System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SAdd(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: SAdd(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: SAdd(string, IEnumerable<string>)
  nameWithType: IRedisClient<TOrder, TSortType>.SAdd(string, IEnumerable<string>)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SAdd(string, System.Collections.Generic.IEnumerable<string>)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: SAdd
    path: ../Redis/IRedisClient.cs
    startLine: 73
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long SAdd(string setId, IEnumerable<string> value)
    parameters:
    - id: setId
      type: System.String
    - id: value
      type: System.Collections.Generic.IEnumerable{System.String}
    return:
      type: System.Int64
    content.vb: Function SAdd(setId As String, value As IEnumerable(Of String)) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SAdd*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SAdd(String, IEnumerable(Of String))
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SAdd(String, System.Collections.Generic.IEnumerable(Of String))
  name.vb: SAdd(String, IEnumerable(Of String))
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SRem(System.String,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SRem(System.String,System.String)
  id: SRem(System.String,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: SRem(string, string)
  nameWithType: IRedisClient<TOrder, TSortType>.SRem(string, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SRem(string, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: SRem
    path: ../Redis/IRedisClient.cs
    startLine: 74
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: bool SRem(string setId, string value)
    parameters:
    - id: setId
      type: System.String
    - id: value
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function SRem(setId As String, value As String) As Boolean
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SRem*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SRem(String, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SRem(String, String)
  name.vb: SRem(String, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SPop(System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SPop(System.String)
  id: SPop(System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: SPop(string)
  nameWithType: IRedisClient<TOrder, TSortType>.SPop(string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SPop(string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: SPop
    path: ../Redis/IRedisClient.cs
    startLine: 75
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: string SPop(string setId)
    parameters:
    - id: setId
      type: System.String
    return:
      type: System.String
    content.vb: Function SPop(setId As String) As String
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SPop*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SPop(String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SPop(String)
  name.vb: SPop(String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SPop(System.String,System.Int32)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SPop(System.String,System.Int32)
  id: SPop(System.String,System.Int32)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: SPop(string, int)
  nameWithType: IRedisClient<TOrder, TSortType>.SPop(string, int)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SPop(string, int)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: SPop
    path: ../Redis/IRedisClient.cs
    startLine: 76
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: IEnumerable<string> SPop(string setId, int count)
    parameters:
    - id: setId
      type: System.String
    - id: count
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Function SPop(setId As String, count As Integer) As IEnumerable(Of String)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SPop*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SPop(String, Integer)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SPop(String, Integer)
  name.vb: SPop(String, Integer)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SMove(System.String,System.String,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SMove(System.String,System.String,System.String)
  id: SMove(System.String,System.String,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: SMove(string, string, string)
  nameWithType: IRedisClient<TOrder, TSortType>.SMove(string, string, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SMove(string, string, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: SMove
    path: ../Redis/IRedisClient.cs
    startLine: 77
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: bool SMove(string fromSetId, string toSetId, string value)
    parameters:
    - id: fromSetId
      type: System.String
    - id: toSetId
      type: System.String
    - id: value
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function SMove(fromSetId As String, toSetId As String, value As String) As Boolean
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SMove*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SMove(String, String, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SMove(String, String, String)
  name.vb: SMove(String, String, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SCard(System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SCard(System.String)
  id: SCard(System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: SCard(string)
  nameWithType: IRedisClient<TOrder, TSortType>.SCard(string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SCard(string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: SCard
    path: ../Redis/IRedisClient.cs
    startLine: 78
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long SCard(string setId)
    parameters:
    - id: setId
      type: System.String
    return:
      type: System.Int64
    content.vb: Function SCard(setId As String) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SCard*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SCard(String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SCard(String)
  name.vb: SCard(String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SIsMember(System.String,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SIsMember(System.String,System.String)
  id: SIsMember(System.String,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: SIsMember(string, string)
  nameWithType: IRedisClient<TOrder, TSortType>.SIsMember(string, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SIsMember(string, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: SIsMember
    path: ../Redis/IRedisClient.cs
    startLine: 79
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: bool SIsMember(string setId, string value)
    parameters:
    - id: setId
      type: System.String
    - id: value
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function SIsMember(setId As String, value As String) As Boolean
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SIsMember*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SIsMember(String, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SIsMember(String, String)
  name.vb: SIsMember(String, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SInter(System.String[])
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SInter(System.String[])
  id: SInter(System.String[])
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: SInter(params string[])
  nameWithType: IRedisClient<TOrder, TSortType>.SInter(params string[])
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SInter(params string[])
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: SInter
    path: ../Redis/IRedisClient.cs
    startLine: 80
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: IEnumerable<string> SInter(params string[] setIds)
    parameters:
    - id: setIds
      type: System.String[]
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Function SInter(ParamArray setIds As String()) As IEnumerable(Of String)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SInter*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SInter(ParamArray String())
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SInter(ParamArray String())
  name.vb: SInter(ParamArray String())
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SInterStore(System.String,System.String[])
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SInterStore(System.String,System.String[])
  id: SInterStore(System.String,System.String[])
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: SInterStore(string, params string[])
  nameWithType: IRedisClient<TOrder, TSortType>.SInterStore(string, params string[])
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SInterStore(string, params string[])
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: SInterStore
    path: ../Redis/IRedisClient.cs
    startLine: 81
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: void SInterStore(string intoSetId, params string[] setIds)
    parameters:
    - id: intoSetId
      type: System.String
    - id: setIds
      type: System.String[]
    content.vb: Sub SInterStore(intoSetId As String, ParamArray setIds As String())
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SInterStore*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SInterStore(String, ParamArray String())
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SInterStore(String, ParamArray String())
  name.vb: SInterStore(String, ParamArray String())
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SUnion(System.String[])
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SUnion(System.String[])
  id: SUnion(System.String[])
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: SUnion(params string[])
  nameWithType: IRedisClient<TOrder, TSortType>.SUnion(params string[])
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SUnion(params string[])
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: SUnion
    path: ../Redis/IRedisClient.cs
    startLine: 82
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: IEnumerable<string> SUnion(params string[] setIds)
    parameters:
    - id: setIds
      type: System.String[]
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Function SUnion(ParamArray setIds As String()) As IEnumerable(Of String)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SUnion*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SUnion(ParamArray String())
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SUnion(ParamArray String())
  name.vb: SUnion(ParamArray String())
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SUnionStore(System.String,System.String[])
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SUnionStore(System.String,System.String[])
  id: SUnionStore(System.String,System.String[])
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: SUnionStore(string, params string[])
  nameWithType: IRedisClient<TOrder, TSortType>.SUnionStore(string, params string[])
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SUnionStore(string, params string[])
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: SUnionStore
    path: ../Redis/IRedisClient.cs
    startLine: 83
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: void SUnionStore(string intoSetId, params string[] setIds)
    parameters:
    - id: intoSetId
      type: System.String
    - id: setIds
      type: System.String[]
    content.vb: Sub SUnionStore(intoSetId As String, ParamArray setIds As String())
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SUnionStore*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SUnionStore(String, ParamArray String())
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SUnionStore(String, ParamArray String())
  name.vb: SUnionStore(String, ParamArray String())
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SDiff(System.String,System.String[])
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SDiff(System.String,System.String[])
  id: SDiff(System.String,System.String[])
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: SDiff(string, params string[])
  nameWithType: IRedisClient<TOrder, TSortType>.SDiff(string, params string[])
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SDiff(string, params string[])
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: SDiff
    path: ../Redis/IRedisClient.cs
    startLine: 84
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: IEnumerable<string> SDiff(string fromSetId, params string[] withSetIds)
    parameters:
    - id: fromSetId
      type: System.String
    - id: withSetIds
      type: System.String[]
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Function SDiff(fromSetId As String, ParamArray withSetIds As String()) As IEnumerable(Of String)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SDiff*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SDiff(String, ParamArray String())
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SDiff(String, ParamArray String())
  name.vb: SDiff(String, ParamArray String())
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SDiffStore(System.String,System.String,System.String[])
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SDiffStore(System.String,System.String,System.String[])
  id: SDiffStore(System.String,System.String,System.String[])
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: SDiffStore(string, string, params string[])
  nameWithType: IRedisClient<TOrder, TSortType>.SDiffStore(string, string, params string[])
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SDiffStore(string, string, params string[])
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: SDiffStore
    path: ../Redis/IRedisClient.cs
    startLine: 85
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: void SDiffStore(string intoSetId, string fromSetId, params string[] withSetIds)
    parameters:
    - id: intoSetId
      type: System.String
    - id: fromSetId
      type: System.String
    - id: withSetIds
      type: System.String[]
    content.vb: Sub SDiffStore(intoSetId As String, fromSetId As String, ParamArray withSetIds As String())
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SDiffStore*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SDiffStore(String, String, ParamArray String())
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SDiffStore(String, String, ParamArray String())
  name.vb: SDiffStore(String, String, ParamArray String())
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SRandMember(System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SRandMember(System.String)
  id: SRandMember(System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: SRandMember(string)
  nameWithType: IRedisClient<TOrder, TSortType>.SRandMember(string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SRandMember(string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: SRandMember
    path: ../Redis/IRedisClient.cs
    startLine: 86
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: string SRandMember(string setId)
    parameters:
    - id: setId
      type: System.String
    return:
      type: System.String
    content.vb: Function SRandMember(setId As String) As String
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SRandMember*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SRandMember(String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SRandMember(String)
  name.vb: SRandMember(String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZAdd(System.String,System.Double,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZAdd(System.String,System.Double,System.String)
  id: ZAdd(System.String,System.Double,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZAdd(string, double, string)
  nameWithType: IRedisClient<TOrder, TSortType>.ZAdd(string, double, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZAdd(string, double, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZAdd
    path: ../Redis/IRedisClient.cs
    startLine: 90
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: bool ZAdd(string setId, double score, string value)
    parameters:
    - id: setId
      type: System.String
    - id: score
      type: System.Double
    - id: value
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function ZAdd(setId As String, score As Double, value As String) As Boolean
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZAdd*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZAdd(String, Double, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZAdd(String, Double, String)
  name.vb: ZAdd(String, Double, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZAdd(System.String,System.Int64,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZAdd(System.String,System.Int64,System.String)
  id: ZAdd(System.String,System.Int64,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZAdd(string, long, string)
  nameWithType: IRedisClient<TOrder, TSortType>.ZAdd(string, long, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZAdd(string, long, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZAdd
    path: ../Redis/IRedisClient.cs
    startLine: 91
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: bool ZAdd(string setId, long score, string value)
    parameters:
    - id: setId
      type: System.String
    - id: score
      type: System.Int64
    - id: value
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function ZAdd(setId As String, score As Long, value As String) As Boolean
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZAdd*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZAdd(String, Long, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZAdd(String, Long, String)
  name.vb: ZAdd(String, Long, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRem(System.String,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRem(System.String,System.String)
  id: ZRem(System.String,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZRem(string, string)
  nameWithType: IRedisClient<TOrder, TSortType>.ZRem(string, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRem(string, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZRem
    path: ../Redis/IRedisClient.cs
    startLine: 92
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: bool ZRem(string setId, string value)
    parameters:
    - id: setId
      type: System.String
    - id: value
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function ZRem(setId As String, value As String) As Boolean
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRem*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRem(String, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRem(String, String)
  name.vb: ZRem(String, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRem(System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRem(System.String,System.Collections.Generic.IEnumerable{System.String})
  id: ZRem(System.String,System.Collections.Generic.IEnumerable{System.String})
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZRem(string, IEnumerable<string>)
  nameWithType: IRedisClient<TOrder, TSortType>.ZRem(string, IEnumerable<string>)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRem(string, System.Collections.Generic.IEnumerable<string>)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZRem
    path: ../Redis/IRedisClient.cs
    startLine: 93
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long ZRem(string setId, IEnumerable<string> values)
    parameters:
    - id: setId
      type: System.String
    - id: values
      type: System.Collections.Generic.IEnumerable{System.String}
    return:
      type: System.Int64
    content.vb: Function ZRem(setId As String, values As IEnumerable(Of String)) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRem*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRem(String, IEnumerable(Of String))
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRem(String, System.Collections.Generic.IEnumerable(Of String))
  name.vb: ZRem(String, IEnumerable(Of String))
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZIncrBy(System.String,System.Double,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZIncrBy(System.String,System.Double,System.String)
  id: ZIncrBy(System.String,System.Double,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZIncrBy(string, double, string)
  nameWithType: IRedisClient<TOrder, TSortType>.ZIncrBy(string, double, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZIncrBy(string, double, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZIncrBy
    path: ../Redis/IRedisClient.cs
    startLine: 94
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: double ZIncrBy(string setId, double incrBy, string value)
    parameters:
    - id: setId
      type: System.String
    - id: incrBy
      type: System.Double
    - id: value
      type: System.String
    return:
      type: System.Double
    content.vb: Function ZIncrBy(setId As String, incrBy As Double, value As String) As Double
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZIncrBy*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZIncrBy(String, Double, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZIncrBy(String, Double, String)
  name.vb: ZIncrBy(String, Double, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZIncrBy(System.String,System.Int64,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZIncrBy(System.String,System.Int64,System.String)
  id: ZIncrBy(System.String,System.Int64,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZIncrBy(string, long, string)
  nameWithType: IRedisClient<TOrder, TSortType>.ZIncrBy(string, long, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZIncrBy(string, long, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZIncrBy
    path: ../Redis/IRedisClient.cs
    startLine: 95
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: double ZIncrBy(string setId, long incrBy, string value)
    parameters:
    - id: setId
      type: System.String
    - id: incrBy
      type: System.Int64
    - id: value
      type: System.String
    return:
      type: System.Double
    content.vb: Function ZIncrBy(setId As String, incrBy As Long, value As String) As Double
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZIncrBy*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZIncrBy(String, Long, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZIncrBy(String, Long, String)
  name.vb: ZIncrBy(String, Long, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRank(System.String,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRank(System.String,System.String)
  id: ZRank(System.String,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZRank(string, string)
  nameWithType: IRedisClient<TOrder, TSortType>.ZRank(string, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRank(string, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZRank
    path: ../Redis/IRedisClient.cs
    startLine: 96
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long ZRank(string setId, string value)
    parameters:
    - id: setId
      type: System.String
    - id: value
      type: System.String
    return:
      type: System.Int64
    content.vb: Function ZRank(setId As String, value As String) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRank*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRank(String, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRank(String, String)
  name.vb: ZRank(String, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRank(System.String,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRank(System.String,System.String)
  id: ZRevRank(System.String,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZRevRank(string, string)
  nameWithType: IRedisClient<TOrder, TSortType>.ZRevRank(string, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRevRank(string, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZRevRank
    path: ../Redis/IRedisClient.cs
    startLine: 97
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long ZRevRank(string setId, string value)
    parameters:
    - id: setId
      type: System.String
    - id: value
      type: System.String
    return:
      type: System.Int64
    content.vb: Function ZRevRank(setId As String, value As String) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRank*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRevRank(String, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRevRank(String, String)
  name.vb: ZRevRank(String, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRange(System.String,System.Int32,System.Int32)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRange(System.String,System.Int32,System.Int32)
  id: ZRange(System.String,System.Int32,System.Int32)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZRange(string, int, int)
  nameWithType: IRedisClient<TOrder, TSortType>.ZRange(string, int, int)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRange(string, int, int)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZRange
    path: ../Redis/IRedisClient.cs
    startLine: 98
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: IEnumerable<string> ZRange(string setId, int min, int max)
    parameters:
    - id: setId
      type: System.String
    - id: min
      type: System.Int32
    - id: max
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Function ZRange(setId As String, min As Integer, max As Integer) As IEnumerable(Of String)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRange*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRange(String, Integer, Integer)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRange(String, Integer, Integer)
  name.vb: ZRange(String, Integer, Integer)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeWithScores(System.String,System.Int32,System.Int32)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeWithScores(System.String,System.Int32,System.Int32)
  id: ZRangeWithScores(System.String,System.Int32,System.Int32)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZRangeWithScores(string, int, int)
  nameWithType: IRedisClient<TOrder, TSortType>.ZRangeWithScores(string, int, int)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRangeWithScores(string, int, int)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZRangeWithScores
    path: ../Redis/IRedisClient.cs
    startLine: 99
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: IEnumerable<CSortedSetResult> ZRangeWithScores(string setId, int min, int max)
    parameters:
    - id: setId
      type: System.String
    - id: min
      type: System.Int32
    - id: max
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{Cathay.SDK.Cloud.Interface.Redis.CSortedSetResult}
    content.vb: Function ZRangeWithScores(setId As String, min As Integer, max As Integer) As IEnumerable(Of CSortedSetResult)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeWithScores*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRangeWithScores(String, Integer, Integer)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRangeWithScores(String, Integer, Integer)
  name.vb: ZRangeWithScores(String, Integer, Integer)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRange(System.String,System.Int32,System.Int32)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRange(System.String,System.Int32,System.Int32)
  id: ZRevRange(System.String,System.Int32,System.Int32)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZRevRange(string, int, int)
  nameWithType: IRedisClient<TOrder, TSortType>.ZRevRange(string, int, int)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRevRange(string, int, int)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZRevRange
    path: ../Redis/IRedisClient.cs
    startLine: 100
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: IEnumerable<string> ZRevRange(string setId, int min, int max)
    parameters:
    - id: setId
      type: System.String
    - id: min
      type: System.Int32
    - id: max
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Function ZRevRange(setId As String, min As Integer, max As Integer) As IEnumerable(Of String)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRange*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRevRange(String, Integer, Integer)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRevRange(String, Integer, Integer)
  name.vb: ZRevRange(String, Integer, Integer)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeWithScores(System.String,System.Int32,System.Int32)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeWithScores(System.String,System.Int32,System.Int32)
  id: ZRevRangeWithScores(System.String,System.Int32,System.Int32)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZRevRangeWithScores(string, int, int)
  nameWithType: IRedisClient<TOrder, TSortType>.ZRevRangeWithScores(string, int, int)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRevRangeWithScores(string, int, int)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZRevRangeWithScores
    path: ../Redis/IRedisClient.cs
    startLine: 101
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: IEnumerable<CSortedSetResult> ZRevRangeWithScores(string setId, int min, int max)
    parameters:
    - id: setId
      type: System.String
    - id: min
      type: System.Int32
    - id: max
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{Cathay.SDK.Cloud.Interface.Redis.CSortedSetResult}
    content.vb: Function ZRevRangeWithScores(setId As String, min As Integer, max As Integer) As IEnumerable(Of CSortedSetResult)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeWithScores*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRevRangeWithScores(String, Integer, Integer)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRevRangeWithScores(String, Integer, Integer)
  name.vb: ZRevRangeWithScores(String, Integer, Integer)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByScore(System.String,System.Double,System.Double,System.Int32,System.Int32)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByScore(System.String,System.Double,System.Double,System.Int32,System.Int32)
  id: ZRangeByScore(System.String,System.Double,System.Double,System.Int32,System.Int32)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZRangeByScore(string, double, double, int, int)
  nameWithType: IRedisClient<TOrder, TSortType>.ZRangeByScore(string, double, double, int, int)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRangeByScore(string, double, double, int, int)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZRangeByScore
    path: ../Redis/IRedisClient.cs
    startLine: 102
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: IEnumerable<string> ZRangeByScore(string setId, double min, double max, int skip, int take)
    parameters:
    - id: setId
      type: System.String
    - id: min
      type: System.Double
    - id: max
      type: System.Double
    - id: skip
      type: System.Int32
    - id: take
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Function ZRangeByScore(setId As String, min As Double, max As Double, skip As Integer, take As Integer) As IEnumerable(Of String)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByScore*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRangeByScore(String, Double, Double, Integer, Integer)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRangeByScore(String, Double, Double, Integer, Integer)
  name.vb: ZRangeByScore(String, Double, Double, Integer, Integer)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByScore(System.String,System.Int64,System.Int64,System.Int32,System.Int32)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByScore(System.String,System.Int64,System.Int64,System.Int32,System.Int32)
  id: ZRangeByScore(System.String,System.Int64,System.Int64,System.Int32,System.Int32)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZRangeByScore(string, long, long, int, int)
  nameWithType: IRedisClient<TOrder, TSortType>.ZRangeByScore(string, long, long, int, int)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRangeByScore(string, long, long, int, int)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZRangeByScore
    path: ../Redis/IRedisClient.cs
    startLine: 103
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: IEnumerable<string> ZRangeByScore(string setId, long min, long max, int skip, int take)
    parameters:
    - id: setId
      type: System.String
    - id: min
      type: System.Int64
    - id: max
      type: System.Int64
    - id: skip
      type: System.Int32
    - id: take
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Function ZRangeByScore(setId As String, min As Long, max As Long, skip As Integer, take As Integer) As IEnumerable(Of String)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByScore*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRangeByScore(String, Long, Long, Integer, Integer)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRangeByScore(String, Long, Long, Integer, Integer)
  name.vb: ZRangeByScore(String, Long, Long, Integer, Integer)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByScoreWithScores(System.String,System.Double,System.Double,System.Int32,System.Int32)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByScoreWithScores(System.String,System.Double,System.Double,System.Int32,System.Int32)
  id: ZRangeByScoreWithScores(System.String,System.Double,System.Double,System.Int32,System.Int32)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZRangeByScoreWithScores(string, double, double, int, int)
  nameWithType: IRedisClient<TOrder, TSortType>.ZRangeByScoreWithScores(string, double, double, int, int)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRangeByScoreWithScores(string, double, double, int, int)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZRangeByScoreWithScores
    path: ../Redis/IRedisClient.cs
    startLine: 104
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: IEnumerable<CSortedSetResult> ZRangeByScoreWithScores(string setId, double min, double max, int skip, int take)
    parameters:
    - id: setId
      type: System.String
    - id: min
      type: System.Double
    - id: max
      type: System.Double
    - id: skip
      type: System.Int32
    - id: take
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{Cathay.SDK.Cloud.Interface.Redis.CSortedSetResult}
    content.vb: Function ZRangeByScoreWithScores(setId As String, min As Double, max As Double, skip As Integer, take As Integer) As IEnumerable(Of CSortedSetResult)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByScoreWithScores*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRangeByScoreWithScores(String, Double, Double, Integer, Integer)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRangeByScoreWithScores(String, Double, Double, Integer, Integer)
  name.vb: ZRangeByScoreWithScores(String, Double, Double, Integer, Integer)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByScoreWithScores(System.String,System.Int64,System.Int64,System.Int32,System.Int32)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByScoreWithScores(System.String,System.Int64,System.Int64,System.Int32,System.Int32)
  id: ZRangeByScoreWithScores(System.String,System.Int64,System.Int64,System.Int32,System.Int32)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZRangeByScoreWithScores(string, long, long, int, int)
  nameWithType: IRedisClient<TOrder, TSortType>.ZRangeByScoreWithScores(string, long, long, int, int)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRangeByScoreWithScores(string, long, long, int, int)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZRangeByScoreWithScores
    path: ../Redis/IRedisClient.cs
    startLine: 105
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: IEnumerable<CSortedSetResult> ZRangeByScoreWithScores(string setId, long min, long max, int skip, int take)
    parameters:
    - id: setId
      type: System.String
    - id: min
      type: System.Int64
    - id: max
      type: System.Int64
    - id: skip
      type: System.Int32
    - id: take
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{Cathay.SDK.Cloud.Interface.Redis.CSortedSetResult}
    content.vb: Function ZRangeByScoreWithScores(setId As String, min As Long, max As Long, skip As Integer, take As Integer) As IEnumerable(Of CSortedSetResult)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByScoreWithScores*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRangeByScoreWithScores(String, Long, Long, Integer, Integer)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRangeByScoreWithScores(String, Long, Long, Integer, Integer)
  name.vb: ZRangeByScoreWithScores(String, Long, Long, Integer, Integer)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeByScore(System.String,System.Double,System.Double,System.Int32,System.Int32)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeByScore(System.String,System.Double,System.Double,System.Int32,System.Int32)
  id: ZRevRangeByScore(System.String,System.Double,System.Double,System.Int32,System.Int32)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZRevRangeByScore(string, double, double, int, int)
  nameWithType: IRedisClient<TOrder, TSortType>.ZRevRangeByScore(string, double, double, int, int)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRevRangeByScore(string, double, double, int, int)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZRevRangeByScore
    path: ../Redis/IRedisClient.cs
    startLine: 106
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: IEnumerable<string> ZRevRangeByScore(string setId, double min, double max, int skip, int take)
    parameters:
    - id: setId
      type: System.String
    - id: min
      type: System.Double
    - id: max
      type: System.Double
    - id: skip
      type: System.Int32
    - id: take
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Function ZRevRangeByScore(setId As String, min As Double, max As Double, skip As Integer, take As Integer) As IEnumerable(Of String)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeByScore*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRevRangeByScore(String, Double, Double, Integer, Integer)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRevRangeByScore(String, Double, Double, Integer, Integer)
  name.vb: ZRevRangeByScore(String, Double, Double, Integer, Integer)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeByScore(System.String,System.Int64,System.Int64,System.Int32,System.Int32)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeByScore(System.String,System.Int64,System.Int64,System.Int32,System.Int32)
  id: ZRevRangeByScore(System.String,System.Int64,System.Int64,System.Int32,System.Int32)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZRevRangeByScore(string, long, long, int, int)
  nameWithType: IRedisClient<TOrder, TSortType>.ZRevRangeByScore(string, long, long, int, int)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRevRangeByScore(string, long, long, int, int)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZRevRangeByScore
    path: ../Redis/IRedisClient.cs
    startLine: 107
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: IEnumerable<string> ZRevRangeByScore(string setId, long min, long max, int skip, int take)
    parameters:
    - id: setId
      type: System.String
    - id: min
      type: System.Int64
    - id: max
      type: System.Int64
    - id: skip
      type: System.Int32
    - id: take
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Function ZRevRangeByScore(setId As String, min As Long, max As Long, skip As Integer, take As Integer) As IEnumerable(Of String)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeByScore*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRevRangeByScore(String, Long, Long, Integer, Integer)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRevRangeByScore(String, Long, Long, Integer, Integer)
  name.vb: ZRevRangeByScore(String, Long, Long, Integer, Integer)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeByScoreWithScores(System.String,System.Double,System.Double,System.Int32,System.Int32)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeByScoreWithScores(System.String,System.Double,System.Double,System.Int32,System.Int32)
  id: ZRevRangeByScoreWithScores(System.String,System.Double,System.Double,System.Int32,System.Int32)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZRevRangeByScoreWithScores(string, double, double, int, int)
  nameWithType: IRedisClient<TOrder, TSortType>.ZRevRangeByScoreWithScores(string, double, double, int, int)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRevRangeByScoreWithScores(string, double, double, int, int)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZRevRangeByScoreWithScores
    path: ../Redis/IRedisClient.cs
    startLine: 108
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: IEnumerable<CSortedSetResult> ZRevRangeByScoreWithScores(string setId, double min, double max, int skip, int take)
    parameters:
    - id: setId
      type: System.String
    - id: min
      type: System.Double
    - id: max
      type: System.Double
    - id: skip
      type: System.Int32
    - id: take
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{Cathay.SDK.Cloud.Interface.Redis.CSortedSetResult}
    content.vb: Function ZRevRangeByScoreWithScores(setId As String, min As Double, max As Double, skip As Integer, take As Integer) As IEnumerable(Of CSortedSetResult)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeByScoreWithScores*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRevRangeByScoreWithScores(String, Double, Double, Integer, Integer)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRevRangeByScoreWithScores(String, Double, Double, Integer, Integer)
  name.vb: ZRevRangeByScoreWithScores(String, Double, Double, Integer, Integer)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeByScoreWithScores(System.String,System.Int64,System.Int64,System.Int32,System.Int32)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeByScoreWithScores(System.String,System.Int64,System.Int64,System.Int32,System.Int32)
  id: ZRevRangeByScoreWithScores(System.String,System.Int64,System.Int64,System.Int32,System.Int32)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZRevRangeByScoreWithScores(string, long, long, int, int)
  nameWithType: IRedisClient<TOrder, TSortType>.ZRevRangeByScoreWithScores(string, long, long, int, int)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRevRangeByScoreWithScores(string, long, long, int, int)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZRevRangeByScoreWithScores
    path: ../Redis/IRedisClient.cs
    startLine: 109
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: IEnumerable<CSortedSetResult> ZRevRangeByScoreWithScores(string setId, long min, long max, int skip, int take)
    parameters:
    - id: setId
      type: System.String
    - id: min
      type: System.Int64
    - id: max
      type: System.Int64
    - id: skip
      type: System.Int32
    - id: take
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{Cathay.SDK.Cloud.Interface.Redis.CSortedSetResult}
    content.vb: Function ZRevRangeByScoreWithScores(setId As String, min As Long, max As Long, skip As Integer, take As Integer) As IEnumerable(Of CSortedSetResult)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeByScoreWithScores*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRevRangeByScoreWithScores(String, Long, Long, Integer, Integer)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRevRangeByScoreWithScores(String, Long, Long, Integer, Integer)
  name.vb: ZRevRangeByScoreWithScores(String, Long, Long, Integer, Integer)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRemRangeByRank(System.String,System.Int32,System.Int32)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRemRangeByRank(System.String,System.Int32,System.Int32)
  id: ZRemRangeByRank(System.String,System.Int32,System.Int32)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZRemRangeByRank(string, int, int)
  nameWithType: IRedisClient<TOrder, TSortType>.ZRemRangeByRank(string, int, int)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRemRangeByRank(string, int, int)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZRemRangeByRank
    path: ../Redis/IRedisClient.cs
    startLine: 110
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long ZRemRangeByRank(string setId, int min, int max)
    parameters:
    - id: setId
      type: System.String
    - id: min
      type: System.Int32
    - id: max
      type: System.Int32
    return:
      type: System.Int64
    content.vb: Function ZRemRangeByRank(setId As String, min As Integer, max As Integer) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRemRangeByRank*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRemRangeByRank(String, Integer, Integer)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRemRangeByRank(String, Integer, Integer)
  name.vb: ZRemRangeByRank(String, Integer, Integer)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRemRangeByScore(System.String,System.Double,System.Double)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRemRangeByScore(System.String,System.Double,System.Double)
  id: ZRemRangeByScore(System.String,System.Double,System.Double)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZRemRangeByScore(string, double, double)
  nameWithType: IRedisClient<TOrder, TSortType>.ZRemRangeByScore(string, double, double)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRemRangeByScore(string, double, double)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZRemRangeByScore
    path: ../Redis/IRedisClient.cs
    startLine: 111
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long ZRemRangeByScore(string setId, double fromScore, double toScore)
    parameters:
    - id: setId
      type: System.String
    - id: fromScore
      type: System.Double
    - id: toScore
      type: System.Double
    return:
      type: System.Int64
    content.vb: Function ZRemRangeByScore(setId As String, fromScore As Double, toScore As Double) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRemRangeByScore*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRemRangeByScore(String, Double, Double)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRemRangeByScore(String, Double, Double)
  name.vb: ZRemRangeByScore(String, Double, Double)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRemRangeByScore(System.String,System.Int64,System.Int64)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRemRangeByScore(System.String,System.Int64,System.Int64)
  id: ZRemRangeByScore(System.String,System.Int64,System.Int64)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZRemRangeByScore(string, long, long)
  nameWithType: IRedisClient<TOrder, TSortType>.ZRemRangeByScore(string, long, long)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRemRangeByScore(string, long, long)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZRemRangeByScore
    path: ../Redis/IRedisClient.cs
    startLine: 112
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long ZRemRangeByScore(string setId, long fromScore, long toScore)
    parameters:
    - id: setId
      type: System.String
    - id: fromScore
      type: System.Int64
    - id: toScore
      type: System.Int64
    return:
      type: System.Int64
    content.vb: Function ZRemRangeByScore(setId As String, fromScore As Long, toScore As Long) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRemRangeByScore*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRemRangeByScore(String, Long, Long)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRemRangeByScore(String, Long, Long)
  name.vb: ZRemRangeByScore(String, Long, Long)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZCard(System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZCard(System.String)
  id: ZCard(System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZCard(string)
  nameWithType: IRedisClient<TOrder, TSortType>.ZCard(string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZCard(string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZCard
    path: ../Redis/IRedisClient.cs
    startLine: 113
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long ZCard(string setId)
    parameters:
    - id: setId
      type: System.String
    return:
      type: System.Int64
    content.vb: Function ZCard(setId As String) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZCard*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZCard(String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZCard(String)
  name.vb: ZCard(String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZScore(System.String,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZScore(System.String,System.String)
  id: ZScore(System.String,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZScore(string, string)
  nameWithType: IRedisClient<TOrder, TSortType>.ZScore(string, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZScore(string, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZScore
    path: ../Redis/IRedisClient.cs
    startLine: 114
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: double ZScore(string setId, string value)
    parameters:
    - id: setId
      type: System.String
    - id: value
      type: System.String
    return:
      type: System.Double
    content.vb: Function ZScore(setId As String, value As String) As Double
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZScore*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZScore(String, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZScore(String, String)
  name.vb: ZScore(String, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZUnionStore(System.String,System.String[])
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZUnionStore(System.String,System.String[])
  id: ZUnionStore(System.String,System.String[])
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZUnionStore(string, params string[])
  nameWithType: IRedisClient<TOrder, TSortType>.ZUnionStore(string, params string[])
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZUnionStore(string, params string[])
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZUnionStore
    path: ../Redis/IRedisClient.cs
    startLine: 115
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long ZUnionStore(string intoSetId, params string[] setIds)
    parameters:
    - id: intoSetId
      type: System.String
    - id: setIds
      type: System.String[]
    return:
      type: System.Int64
    content.vb: Function ZUnionStore(intoSetId As String, ParamArray setIds As String()) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZUnionStore*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZUnionStore(String, ParamArray String())
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZUnionStore(String, ParamArray String())
  name.vb: ZUnionStore(String, ParamArray String())
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZInterStore(System.String,System.String[])
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZInterStore(System.String,System.String[])
  id: ZInterStore(System.String,System.String[])
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZInterStore(string, params string[])
  nameWithType: IRedisClient<TOrder, TSortType>.ZInterStore(string, params string[])
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZInterStore(string, params string[])
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZInterStore
    path: ../Redis/IRedisClient.cs
    startLine: 116
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long ZInterStore(string intoSetId, params string[] setIds)
    parameters:
    - id: intoSetId
      type: System.String
    - id: setIds
      type: System.String[]
    return:
      type: System.Int64
    content.vb: Function ZInterStore(intoSetId As String, ParamArray setIds As String()) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZInterStore*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZInterStore(String, ParamArray String())
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZInterStore(String, ParamArray String())
  name.vb: ZInterStore(String, ParamArray String())
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByLex(System.String,System.String,System.String,System.Int32,System.Int32)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByLex(System.String,System.String,System.String,System.Int32,System.Int32)
  id: ZRangeByLex(System.String,System.String,System.String,System.Int32,System.Int32)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZRangeByLex(string, string, string, int, int)
  nameWithType: IRedisClient<TOrder, TSortType>.ZRangeByLex(string, string, string, int, int)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRangeByLex(string, string, string, int, int)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZRangeByLex
    path: ../Redis/IRedisClient.cs
    startLine: 117
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: IEnumerable<string> ZRangeByLex(string setId, string min, string max, int skip, int take)
    parameters:
    - id: setId
      type: System.String
    - id: min
      type: System.String
    - id: max
      type: System.String
    - id: skip
      type: System.Int32
    - id: take
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Function ZRangeByLex(setId As String, min As String, max As String, skip As Integer, take As Integer) As IEnumerable(Of String)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByLex*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRangeByLex(String, String, String, Integer, Integer)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRangeByLex(String, String, String, Integer, Integer)
  name.vb: ZRangeByLex(String, String, String, Integer, Integer)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZLexCount(System.String,System.String,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZLexCount(System.String,System.String,System.String)
  id: ZLexCount(System.String,System.String,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZLexCount(string, string, string)
  nameWithType: IRedisClient<TOrder, TSortType>.ZLexCount(string, string, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZLexCount(string, string, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZLexCount
    path: ../Redis/IRedisClient.cs
    startLine: 118
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long ZLexCount(string setId, string min, string max)
    parameters:
    - id: setId
      type: System.String
    - id: min
      type: System.String
    - id: max
      type: System.String
    return:
      type: System.Int64
    content.vb: Function ZLexCount(setId As String, min As String, max As String) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZLexCount*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZLexCount(String, String, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZLexCount(String, String, String)
  name.vb: ZLexCount(String, String, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRemRangeByLex(System.String,System.String,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRemRangeByLex(System.String,System.String,System.String)
  id: ZRemRangeByLex(System.String,System.String,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: ZRemRangeByLex(string, string, string)
  nameWithType: IRedisClient<TOrder, TSortType>.ZRemRangeByLex(string, string, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRemRangeByLex(string, string, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: ZRemRangeByLex
    path: ../Redis/IRedisClient.cs
    startLine: 119
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long ZRemRangeByLex(string setId, string min, string max)
    parameters:
    - id: setId
      type: System.String
    - id: min
      type: System.String
    - id: max
      type: System.String
    return:
      type: System.Int64
    content.vb: Function ZRemRangeByLex(setId As String, min As String, max As String) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRemRangeByLex*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRemRangeByLex(String, String, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRemRangeByLex(String, String, String)
  name.vb: ZRemRangeByLex(String, String, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HSet(System.String,System.String,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HSet(System.String,System.String,System.String)
  id: HSet(System.String,System.String,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: HSet(string, string, string)
  nameWithType: IRedisClient<TOrder, TSortType>.HSet(string, string, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.HSet(string, string, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: HSet
    path: ../Redis/IRedisClient.cs
    startLine: 122
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: bool HSet(string hashId, string key, string value)
    parameters:
    - id: hashId
      type: System.String
    - id: key
      type: System.String
    - id: value
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function HSet(hashId As String, key As String, value As String) As Boolean
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HSet*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).HSet(String, String, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).HSet(String, String, String)
  name.vb: HSet(String, String, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HSet(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HSet(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  id: HSet(System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: HSet(string, IEnumerable<string>, IEnumerable<string>)
  nameWithType: IRedisClient<TOrder, TSortType>.HSet(string, IEnumerable<string>, IEnumerable<string>)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.HSet(string, System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<string>)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: HSet
    path: ../Redis/IRedisClient.cs
    startLine: 123
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: void HSet(string hashId, IEnumerable<string> keys, IEnumerable<string> values)
    parameters:
    - id: hashId
      type: System.String
    - id: keys
      type: System.Collections.Generic.IEnumerable{System.String}
    - id: values
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Sub HSet(hashId As String, keys As IEnumerable(Of String), values As IEnumerable(Of String))
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HSet*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).HSet(String, IEnumerable(Of String), IEnumerable(Of String))
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).HSet(String, System.Collections.Generic.IEnumerable(Of String), System.Collections.Generic.IEnumerable(Of String))
  name.vb: HSet(String, IEnumerable(Of String), IEnumerable(Of String))
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HSetNX(System.String,System.String,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HSetNX(System.String,System.String,System.String)
  id: HSetNX(System.String,System.String,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: HSetNX(string, string, string)
  nameWithType: IRedisClient<TOrder, TSortType>.HSetNX(string, string, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.HSetNX(string, string, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: HSetNX
    path: ../Redis/IRedisClient.cs
    startLine: 124
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: bool HSetNX(string hashId, string key, string value)
    parameters:
    - id: hashId
      type: System.String
    - id: key
      type: System.String
    - id: value
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function HSetNX(hashId As String, key As String, value As String) As Boolean
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HSetNX*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).HSetNX(String, String, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).HSetNX(String, String, String)
  name.vb: HSetNX(String, String, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HIncrby(System.String,System.String,System.Int32)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HIncrby(System.String,System.String,System.Int32)
  id: HIncrby(System.String,System.String,System.Int32)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: HIncrby(string, string, int)
  nameWithType: IRedisClient<TOrder, TSortType>.HIncrby(string, string, int)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.HIncrby(string, string, int)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: HIncrby
    path: ../Redis/IRedisClient.cs
    startLine: 125
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long HIncrby(string hashId, string key, int incrementBy)
    parameters:
    - id: hashId
      type: System.String
    - id: key
      type: System.String
    - id: incrementBy
      type: System.Int32
    return:
      type: System.Int64
    content.vb: Function HIncrby(hashId As String, key As String, incrementBy As Integer) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HIncrby*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).HIncrby(String, String, Integer)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).HIncrby(String, String, Integer)
  name.vb: HIncrby(String, String, Integer)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HIncrbyFloat(System.String,System.String,System.Double)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HIncrbyFloat(System.String,System.String,System.Double)
  id: HIncrbyFloat(System.String,System.String,System.Double)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: HIncrbyFloat(string, string, double)
  nameWithType: IRedisClient<TOrder, TSortType>.HIncrbyFloat(string, string, double)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.HIncrbyFloat(string, string, double)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: HIncrbyFloat
    path: ../Redis/IRedisClient.cs
    startLine: 126
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: double HIncrbyFloat(string hashId, string key, double incrementBy)
    parameters:
    - id: hashId
      type: System.String
    - id: key
      type: System.String
    - id: incrementBy
      type: System.Double
    return:
      type: System.Double
    content.vb: Function HIncrbyFloat(hashId As String, key As String, incrementBy As Double) As Double
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HIncrbyFloat*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).HIncrbyFloat(String, String, Double)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).HIncrbyFloat(String, String, Double)
  name.vb: HIncrbyFloat(String, String, Double)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HGet(System.String,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HGet(System.String,System.String)
  id: HGet(System.String,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: HGet(string, string)
  nameWithType: IRedisClient<TOrder, TSortType>.HGet(string, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.HGet(string, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: HGet
    path: ../Redis/IRedisClient.cs
    startLine: 127
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: string HGet(string hashId, string key)
    parameters:
    - id: hashId
      type: System.String
    - id: key
      type: System.String
    return:
      type: System.String
    content.vb: Function HGet(hashId As String, key As String) As String
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HGet*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).HGet(String, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).HGet(String, String)
  name.vb: HGet(String, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HMGet(System.String,System.String[])
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HMGet(System.String,System.String[])
  id: HMGet(System.String,System.String[])
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: HMGet(string, params string[])
  nameWithType: IRedisClient<TOrder, TSortType>.HMGet(string, params string[])
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.HMGet(string, params string[])
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: HMGet
    path: ../Redis/IRedisClient.cs
    startLine: 128
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: IEnumerable<string> HMGet(string hashId, params string[] keysAndArgs)
    parameters:
    - id: hashId
      type: System.String
    - id: keysAndArgs
      type: System.String[]
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Function HMGet(hashId As String, ParamArray keysAndArgs As String()) As IEnumerable(Of String)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HMGet*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).HMGet(String, ParamArray String())
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).HMGet(String, ParamArray String())
  name.vb: HMGet(String, ParamArray String())
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HDel(System.String,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HDel(System.String,System.String)
  id: HDel(System.String,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: HDel(string, string)
  nameWithType: IRedisClient<TOrder, TSortType>.HDel(string, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.HDel(string, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: HDel
    path: ../Redis/IRedisClient.cs
    startLine: 129
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: bool HDel(string hashId, string key)
    parameters:
    - id: hashId
      type: System.String
    - id: key
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function HDel(hashId As String, key As String) As Boolean
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HDel*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).HDel(String, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).HDel(String, String)
  name.vb: HDel(String, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HExists(System.String,System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HExists(System.String,System.String)
  id: HExists(System.String,System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: HExists(string, string)
  nameWithType: IRedisClient<TOrder, TSortType>.HExists(string, string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.HExists(string, string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: HExists
    path: ../Redis/IRedisClient.cs
    startLine: 130
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: bool HExists(string hashId, string key)
    parameters:
    - id: hashId
      type: System.String
    - id: key
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function HExists(hashId As String, key As String) As Boolean
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HExists*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).HExists(String, String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).HExists(String, String)
  name.vb: HExists(String, String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HLen(System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HLen(System.String)
  id: HLen(System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: HLen(string)
  nameWithType: IRedisClient<TOrder, TSortType>.HLen(string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.HLen(string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: HLen
    path: ../Redis/IRedisClient.cs
    startLine: 131
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: long HLen(string hashId)
    parameters:
    - id: hashId
      type: System.String
    return:
      type: System.Int64
    content.vb: Function HLen(hashId As String) As Long
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HLen*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).HLen(String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).HLen(String)
  name.vb: HLen(String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HKeys(System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HKeys(System.String)
  id: HKeys(System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: HKeys(string)
  nameWithType: IRedisClient<TOrder, TSortType>.HKeys(string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.HKeys(string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: HKeys
    path: ../Redis/IRedisClient.cs
    startLine: 132
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: IEnumerable<string> HKeys(string hashId)
    parameters:
    - id: hashId
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Function HKeys(hashId As String) As IEnumerable(Of String)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HKeys*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).HKeys(String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).HKeys(String)
  name.vb: HKeys(String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HVals(System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HVals(System.String)
  id: HVals(System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: HVals(string)
  nameWithType: IRedisClient<TOrder, TSortType>.HVals(string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.HVals(string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: HVals
    path: ../Redis/IRedisClient.cs
    startLine: 133
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: IEnumerable<string> HVals(string hashId)
    parameters:
    - id: hashId
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Function HVals(hashId As String) As IEnumerable(Of String)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HVals*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).HVals(String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).HVals(String)
  name.vb: HVals(String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HGetAll(System.String)
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HGetAll(System.String)
  id: HGetAll(System.String)
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: HGetAll(string)
  nameWithType: IRedisClient<TOrder, TSortType>.HGetAll(string)
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.HGetAll(string)
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: HGetAll
    path: ../Redis/IRedisClient.cs
    startLine: 134
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: IEnumerable<CHashEntry> HGetAll(string hashId)
    parameters:
    - id: hashId
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{Cathay.SDK.Cloud.Interface.Redis.CHashEntry}
    content.vb: Function HGetAll(hashId As String) As IEnumerable(Of CHashEntry)
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HGetAll*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).HGetAll(String)
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).HGetAll(String)
  name.vb: HGetAll(String)
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Watch(System.String[])
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Watch(System.String[])
  id: Watch(System.String[])
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: Watch(params string[])
  nameWithType: IRedisClient<TOrder, TSortType>.Watch(params string[])
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Watch(params string[])
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: Watch
    path: ../Redis/IRedisClient.cs
    startLine: 137
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: void Watch(params string[] keys)
    parameters:
    - id: keys
      type: System.String[]
    content.vb: Sub Watch(ParamArray keys As String())
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Watch*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Watch(ParamArray String())
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Watch(ParamArray String())
  name.vb: Watch(ParamArray String())
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.UnWatch
  commentId: M:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.UnWatch
  id: UnWatch
  parent: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2
  langs:
  - csharp
  - vb
  name: UnWatch()
  nameWithType: IRedisClient<TOrder, TSortType>.UnWatch()
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.UnWatch()
  type: Method
  source:
    remote:
      path: Redis/IRedisClient.cs
      branch: main
      repo: https://github.com/Cathay-CADS/Cathay.SDK.Cloud.Interface.git
    id: UnWatch
    path: ../Redis/IRedisClient.cs
    startLine: 138
  assemblies:
  - Cathay.SDK.Cloud.Interface
  namespace: Cathay.SDK.Cloud.Interface.Redis
  syntax:
    content: void UnWatch()
    content.vb: Sub UnWatch()
  overload: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.UnWatch*
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).UnWatch()
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).UnWatch()
references:
- uid: Cathay.SDK.Cloud.Interface.Redis
  commentId: N:Cathay.SDK.Cloud.Interface.Redis
  href: Cathay.html
  name: Cathay.SDK.Cloud.Interface.Redis
  nameWithType: Cathay.SDK.Cloud.Interface.Redis
  fullName: Cathay.SDK.Cloud.Interface.Redis
  spec.csharp:
  - uid: Cathay
    name: Cathay
    href: Cathay.html
  - name: .
  - uid: Cathay.SDK
    name: SDK
    href: Cathay.SDK.html
  - name: .
  - uid: Cathay.SDK.Cloud
    name: Cloud
    href: Cathay.SDK.Cloud.html
  - name: .
  - uid: Cathay.SDK.Cloud.Interface
    name: Interface
    href: Cathay.SDK.Cloud.Interface.html
  - name: .
  - uid: Cathay.SDK.Cloud.Interface.Redis
    name: Redis
    href: Cathay.SDK.Cloud.Interface.Redis.html
  spec.vb:
  - uid: Cathay
    name: Cathay
    href: Cathay.html
  - name: .
  - uid: Cathay.SDK
    name: SDK
    href: Cathay.SDK.html
  - name: .
  - uid: Cathay.SDK.Cloud
    name: Cloud
    href: Cathay.SDK.Cloud.html
  - name: .
  - uid: Cathay.SDK.Cloud.Interface
    name: Interface
    href: Cathay.SDK.Cloud.Interface.html
  - name: .
  - uid: Cathay.SDK.Cloud.Interface.Redis
    name: Redis
    href: Cathay.SDK.Cloud.Interface.Redis.html
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Quit*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Quit
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Quit
  name: Quit
  nameWithType: IRedisClient<TOrder, TSortType>.Quit
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Quit
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Quit
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Quit
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Type*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Type
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Type(System.String)
  name: Type
  nameWithType: IRedisClient<TOrder, TSortType>.Type
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Type
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Type
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Exists*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Exists
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Exists(System.String)
  name: Exists
  nameWithType: IRedisClient<TOrder, TSortType>.Exists
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Exists
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Exists
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Exists
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.StrLen*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.StrLen
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.StrLen(System.String)
  name: StrLen
  nameWithType: IRedisClient<TOrder, TSortType>.StrLen
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.StrLen
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).StrLen
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).StrLen
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Set*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Set
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Set(System.String,System.String)
  name: Set
  nameWithType: IRedisClient<TOrder, TSortType>.Set
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Set
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Set
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Set
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Persist*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Persist
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Persist(System.String)
  name: Persist
  nameWithType: IRedisClient<TOrder, TSortType>.Persist
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Persist
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Persist
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Persist
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.MSet*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.MSet
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.MSet(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  name: MSet
  nameWithType: IRedisClient<TOrder, TSortType>.MSet
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.MSet
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).MSet
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).MSet
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.MSetNX*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.MSetNX
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.MSetNX(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  name: MSetNX
  nameWithType: IRedisClient<TOrder, TSortType>.MSetNX
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.MSetNX
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).MSetNX
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).MSetNX
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Get*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Get
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Get(System.String)
  name: Get
  nameWithType: IRedisClient<TOrder, TSortType>.Get
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Get
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Get
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Get
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.MGet*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.MGet
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.MGet(System.String[])
  name: MGet
  nameWithType: IRedisClient<TOrder, TSortType>.MGet
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.MGet
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).MGet
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).MGet
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Del*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Del
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Del(System.String[])
  name: Del
  nameWithType: IRedisClient<TOrder, TSortType>.Del
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Del
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Del
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Del
- uid: System.Collections.Generic.List{System.Boolean}
  commentId: T:System.Collections.Generic.List{System.Boolean}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<bool>
  nameWithType: List<bool>
  fullName: System.Collections.Generic.List<bool>
  nameWithType.vb: List(Of Boolean)
  fullName.vb: System.Collections.Generic.List(Of Boolean)
  name.vb: List(Of Boolean)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Incr*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Incr
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Incr(System.String)
  name: Incr
  nameWithType: IRedisClient<TOrder, TSortType>.Incr
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Incr
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Incr
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Incr
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.IncrBy*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.IncrBy
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.IncrBy(System.String,System.Int64)
  name: IncrBy
  nameWithType: IRedisClient<TOrder, TSortType>.IncrBy
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.IncrBy
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).IncrBy
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).IncrBy
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.IncrByFloat*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.IncrByFloat
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.IncrByFloat(System.String,System.Double)
  name: IncrByFloat
  nameWithType: IRedisClient<TOrder, TSortType>.IncrByFloat
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.IncrByFloat
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).IncrByFloat
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).IncrByFloat
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Decr*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Decr
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Decr(System.String)
  name: Decr
  nameWithType: IRedisClient<TOrder, TSortType>.Decr
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Decr
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Decr
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Decr
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.DecrBy*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.DecrBy
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.DecrBy(System.String,System.Int64)
  name: DecrBy
  nameWithType: IRedisClient<TOrder, TSortType>.DecrBy
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.DecrBy
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).DecrBy
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).DecrBy
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Append*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Append
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Append(System.String,System.String)
  name: Append
  nameWithType: IRedisClient<TOrder, TSortType>.Append
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Append
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Append
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Append
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.GetRange*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.GetRange
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.GetRange(System.String,System.Int32,System.Int32)
  name: GetRange
  nameWithType: IRedisClient<TOrder, TSortType>.GetRange
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.GetRange
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).GetRange
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).GetRange
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SetRange*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SetRange
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SetRange(System.String,System.Int32,System.String)
  name: SetRange
  nameWithType: IRedisClient<TOrder, TSortType>.SetRange
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SetRange
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SetRange
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SetRange
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.GetBit*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.GetBit
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.GetBit(System.String,System.Int32)
  name: GetBit
  nameWithType: IRedisClient<TOrder, TSortType>.GetBit
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.GetBit
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).GetBit
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).GetBit
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SetBit*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SetBit
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SetBit(System.String,System.Int32,System.Boolean)
  name: SetBit
  nameWithType: IRedisClient<TOrder, TSortType>.SetBit
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SetBit
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SetBit
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SetBit
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RandomKey*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RandomKey
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RandomKey
  name: RandomKey
  nameWithType: IRedisClient<TOrder, TSortType>.RandomKey
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.RandomKey
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).RandomKey
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).RandomKey
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Rename*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Rename
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Rename(System.String,System.String)
  name: Rename
  nameWithType: IRedisClient<TOrder, TSortType>.Rename
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Rename
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Rename
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Rename
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RenameNX*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RenameNX
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RenameNX(System.String,System.String)
  name: RenameNX
  nameWithType: IRedisClient<TOrder, TSortType>.RenameNX
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.RenameNX
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).RenameNX
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).RenameNX
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Expire*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Expire
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Expire(System.String,System.Int32)
  name: Expire
  nameWithType: IRedisClient<TOrder, TSortType>.Expire
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Expire
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Expire
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Expire
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.PExpire*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.PExpire
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.PExpire(System.String,System.Int64)
  name: PExpire
  nameWithType: IRedisClient<TOrder, TSortType>.PExpire
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.PExpire
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).PExpire
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).PExpire
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ExpireAt*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ExpireAt
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ExpireAt(System.String,System.Int64)
  name: ExpireAt
  nameWithType: IRedisClient<TOrder, TSortType>.ExpireAt
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ExpireAt
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ExpireAt
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ExpireAt
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.PExpireAt*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.PExpireAt
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.PExpireAt(System.String,System.Int64)
  name: PExpireAt
  nameWithType: IRedisClient<TOrder, TSortType>.PExpireAt
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.PExpireAt
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).PExpireAt
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).PExpireAt
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Ttl*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Ttl
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Ttl(System.String)
  name: Ttl
  nameWithType: IRedisClient<TOrder, TSortType>.Ttl
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Ttl
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Ttl
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Ttl
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.PTtl*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.PTtl
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.PTtl(System.String)
  name: PTtl
  nameWithType: IRedisClient<TOrder, TSortType>.PTtl
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.PTtl
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).PTtl
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).PTtl
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Sort*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Sort
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Sort(System.String,`0,`1)
  name: Sort
  nameWithType: IRedisClient<TOrder, TSortType>.Sort
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Sort
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Sort
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Sort
- uid: '{TOrder}'
  commentId: '!:TOrder'
  definition: TOrder
  name: TOrder
  nameWithType: TOrder
  fullName: TOrder
- uid: '{TSortType}'
  commentId: '!:TSortType'
  definition: TSortType
  name: TSortType
  nameWithType: TSortType
  fullName: TSortType
- uid: TOrder
  name: TOrder
  nameWithType: TOrder
  fullName: TOrder
- uid: TSortType
  name: TSortType
  nameWithType: TSortType
  fullName: TSortType
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LRange*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LRange
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LRange(System.String,System.Int32,System.Int32)
  name: LRange
  nameWithType: IRedisClient<TOrder, TSortType>.LRange
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.LRange
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).LRange
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).LRange
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RPush*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RPush
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RPush(System.String,System.String)
  name: RPush
  nameWithType: IRedisClient<TOrder, TSortType>.RPush
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.RPush
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).RPush
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).RPush
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RPushX*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RPushX
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RPushX(System.String,System.String)
  name: RPushX
  nameWithType: IRedisClient<TOrder, TSortType>.RPushX
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.RPushX
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).RPushX
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).RPushX
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LPush*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LPush
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LPush(System.String,System.String)
  name: LPush
  nameWithType: IRedisClient<TOrder, TSortType>.LPush
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.LPush
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).LPush
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).LPush
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LPushX*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LPushX
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LPushX(System.String,System.String)
  name: LPushX
  nameWithType: IRedisClient<TOrder, TSortType>.LPushX
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.LPushX
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).LPushX
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).LPushX
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LTrim*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LTrim
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LTrim(System.String,System.Int32,System.Int32)
  name: LTrim
  nameWithType: IRedisClient<TOrder, TSortType>.LTrim
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.LTrim
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).LTrim
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).LTrim
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LRem*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LRem
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LRem(System.String,System.Int32,System.String)
  name: LRem
  nameWithType: IRedisClient<TOrder, TSortType>.LRem
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.LRem
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).LRem
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).LRem
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LLen*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LLen
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LLen(System.String)
  name: LLen
  nameWithType: IRedisClient<TOrder, TSortType>.LLen
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.LLen
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).LLen
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).LLen
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LIndex*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LIndex
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LIndex(System.String,System.Int32)
  name: LIndex
  nameWithType: IRedisClient<TOrder, TSortType>.LIndex
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.LIndex
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).LIndex
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).LIndex
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LInsert*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LInsert
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LInsert(System.String,System.Boolean,System.String,System.String)
  name: LInsert
  nameWithType: IRedisClient<TOrder, TSortType>.LInsert
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.LInsert
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).LInsert
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).LInsert
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LSet*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LSet
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LSet(System.String,System.Int32,System.String)
  name: LSet
  nameWithType: IRedisClient<TOrder, TSortType>.LSet
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.LSet
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).LSet
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).LSet
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LPop*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LPop
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.LPop(System.String)
  name: LPop
  nameWithType: IRedisClient<TOrder, TSortType>.LPop
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.LPop
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).LPop
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).LPop
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RPop*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RPop
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.RPop(System.String)
  name: RPop
  nameWithType: IRedisClient<TOrder, TSortType>.RPop
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.RPop
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).RPop
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).RPop
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SMembers*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SMembers
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SMembers(System.String)
  name: SMembers
  nameWithType: IRedisClient<TOrder, TSortType>.SMembers
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SMembers
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SMembers
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SMembers
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SAdd*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SAdd
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SAdd(System.String,System.String)
  name: SAdd
  nameWithType: IRedisClient<TOrder, TSortType>.SAdd
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SAdd
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SAdd
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SAdd
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SRem*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SRem
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SRem(System.String,System.String)
  name: SRem
  nameWithType: IRedisClient<TOrder, TSortType>.SRem
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SRem
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SRem
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SRem
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SPop*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SPop
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SPop(System.String)
  name: SPop
  nameWithType: IRedisClient<TOrder, TSortType>.SPop
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SPop
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SPop
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SPop
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SMove*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SMove
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SMove(System.String,System.String,System.String)
  name: SMove
  nameWithType: IRedisClient<TOrder, TSortType>.SMove
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SMove
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SMove
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SMove
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SCard*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SCard
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SCard(System.String)
  name: SCard
  nameWithType: IRedisClient<TOrder, TSortType>.SCard
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SCard
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SCard
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SCard
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SIsMember*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SIsMember
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SIsMember(System.String,System.String)
  name: SIsMember
  nameWithType: IRedisClient<TOrder, TSortType>.SIsMember
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SIsMember
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SIsMember
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SIsMember
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SInter*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SInter
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SInter(System.String[])
  name: SInter
  nameWithType: IRedisClient<TOrder, TSortType>.SInter
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SInter
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SInter
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SInter
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SInterStore*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SInterStore
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SInterStore(System.String,System.String[])
  name: SInterStore
  nameWithType: IRedisClient<TOrder, TSortType>.SInterStore
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SInterStore
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SInterStore
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SInterStore
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SUnion*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SUnion
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SUnion(System.String[])
  name: SUnion
  nameWithType: IRedisClient<TOrder, TSortType>.SUnion
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SUnion
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SUnion
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SUnion
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SUnionStore*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SUnionStore
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SUnionStore(System.String,System.String[])
  name: SUnionStore
  nameWithType: IRedisClient<TOrder, TSortType>.SUnionStore
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SUnionStore
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SUnionStore
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SUnionStore
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SDiff*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SDiff
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SDiff(System.String,System.String[])
  name: SDiff
  nameWithType: IRedisClient<TOrder, TSortType>.SDiff
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SDiff
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SDiff
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SDiff
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SDiffStore*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SDiffStore
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SDiffStore(System.String,System.String,System.String[])
  name: SDiffStore
  nameWithType: IRedisClient<TOrder, TSortType>.SDiffStore
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SDiffStore
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SDiffStore
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SDiffStore
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SRandMember*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SRandMember
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.SRandMember(System.String)
  name: SRandMember
  nameWithType: IRedisClient<TOrder, TSortType>.SRandMember
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.SRandMember
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).SRandMember
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).SRandMember
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZAdd*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZAdd
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZAdd(System.String,System.Double,System.String)
  name: ZAdd
  nameWithType: IRedisClient<TOrder, TSortType>.ZAdd
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZAdd
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZAdd
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZAdd
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRem*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRem
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRem(System.String,System.String)
  name: ZRem
  nameWithType: IRedisClient<TOrder, TSortType>.ZRem
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRem
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRem
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRem
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZIncrBy*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZIncrBy
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZIncrBy(System.String,System.Double,System.String)
  name: ZIncrBy
  nameWithType: IRedisClient<TOrder, TSortType>.ZIncrBy
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZIncrBy
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZIncrBy
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZIncrBy
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRank*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRank
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRank(System.String,System.String)
  name: ZRank
  nameWithType: IRedisClient<TOrder, TSortType>.ZRank
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRank
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRank
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRank
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRank*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRank
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRank(System.String,System.String)
  name: ZRevRank
  nameWithType: IRedisClient<TOrder, TSortType>.ZRevRank
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRevRank
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRevRank
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRevRank
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRange*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRange
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRange(System.String,System.Int32,System.Int32)
  name: ZRange
  nameWithType: IRedisClient<TOrder, TSortType>.ZRange
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRange
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRange
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRange
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeWithScores*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeWithScores
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeWithScores(System.String,System.Int32,System.Int32)
  name: ZRangeWithScores
  nameWithType: IRedisClient<TOrder, TSortType>.ZRangeWithScores
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRangeWithScores
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRangeWithScores
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRangeWithScores
- uid: System.Collections.Generic.IEnumerable{Cathay.SDK.Cloud.Interface.Redis.CSortedSetResult}
  commentId: T:System.Collections.Generic.IEnumerable{Cathay.SDK.Cloud.Interface.Redis.CSortedSetResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<CSortedSetResult>
  nameWithType: IEnumerable<CSortedSetResult>
  fullName: System.Collections.Generic.IEnumerable<Cathay.SDK.Cloud.Interface.Redis.CSortedSetResult>
  nameWithType.vb: IEnumerable(Of CSortedSetResult)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Cathay.SDK.Cloud.Interface.Redis.CSortedSetResult)
  name.vb: IEnumerable(Of CSortedSetResult)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Cathay.SDK.Cloud.Interface.Redis.CSortedSetResult
    name: CSortedSetResult
    href: Cathay.SDK.Cloud.Interface.Redis.CSortedSetResult.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Cathay.SDK.Cloud.Interface.Redis.CSortedSetResult
    name: CSortedSetResult
    href: Cathay.SDK.Cloud.Interface.Redis.CSortedSetResult.html
  - name: )
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRange*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRange
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRange(System.String,System.Int32,System.Int32)
  name: ZRevRange
  nameWithType: IRedisClient<TOrder, TSortType>.ZRevRange
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRevRange
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRevRange
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRevRange
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeWithScores*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeWithScores
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeWithScores(System.String,System.Int32,System.Int32)
  name: ZRevRangeWithScores
  nameWithType: IRedisClient<TOrder, TSortType>.ZRevRangeWithScores
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRevRangeWithScores
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRevRangeWithScores
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRevRangeWithScores
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByScore*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByScore
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByScore(System.String,System.Double,System.Double,System.Int32,System.Int32)
  name: ZRangeByScore
  nameWithType: IRedisClient<TOrder, TSortType>.ZRangeByScore
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRangeByScore
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRangeByScore
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRangeByScore
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByScoreWithScores*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByScoreWithScores
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByScoreWithScores(System.String,System.Double,System.Double,System.Int32,System.Int32)
  name: ZRangeByScoreWithScores
  nameWithType: IRedisClient<TOrder, TSortType>.ZRangeByScoreWithScores
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRangeByScoreWithScores
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRangeByScoreWithScores
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRangeByScoreWithScores
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeByScore*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeByScore
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeByScore(System.String,System.Double,System.Double,System.Int32,System.Int32)
  name: ZRevRangeByScore
  nameWithType: IRedisClient<TOrder, TSortType>.ZRevRangeByScore
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRevRangeByScore
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRevRangeByScore
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRevRangeByScore
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeByScoreWithScores*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeByScoreWithScores
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRevRangeByScoreWithScores(System.String,System.Double,System.Double,System.Int32,System.Int32)
  name: ZRevRangeByScoreWithScores
  nameWithType: IRedisClient<TOrder, TSortType>.ZRevRangeByScoreWithScores
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRevRangeByScoreWithScores
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRevRangeByScoreWithScores
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRevRangeByScoreWithScores
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRemRangeByRank*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRemRangeByRank
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRemRangeByRank(System.String,System.Int32,System.Int32)
  name: ZRemRangeByRank
  nameWithType: IRedisClient<TOrder, TSortType>.ZRemRangeByRank
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRemRangeByRank
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRemRangeByRank
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRemRangeByRank
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRemRangeByScore*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRemRangeByScore
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRemRangeByScore(System.String,System.Double,System.Double)
  name: ZRemRangeByScore
  nameWithType: IRedisClient<TOrder, TSortType>.ZRemRangeByScore
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRemRangeByScore
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRemRangeByScore
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRemRangeByScore
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZCard*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZCard
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZCard(System.String)
  name: ZCard
  nameWithType: IRedisClient<TOrder, TSortType>.ZCard
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZCard
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZCard
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZCard
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZScore*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZScore
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZScore(System.String,System.String)
  name: ZScore
  nameWithType: IRedisClient<TOrder, TSortType>.ZScore
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZScore
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZScore
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZScore
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZUnionStore*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZUnionStore
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZUnionStore(System.String,System.String[])
  name: ZUnionStore
  nameWithType: IRedisClient<TOrder, TSortType>.ZUnionStore
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZUnionStore
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZUnionStore
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZUnionStore
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZInterStore*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZInterStore
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZInterStore(System.String,System.String[])
  name: ZInterStore
  nameWithType: IRedisClient<TOrder, TSortType>.ZInterStore
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZInterStore
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZInterStore
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZInterStore
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByLex*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByLex
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRangeByLex(System.String,System.String,System.String,System.Int32,System.Int32)
  name: ZRangeByLex
  nameWithType: IRedisClient<TOrder, TSortType>.ZRangeByLex
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRangeByLex
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRangeByLex
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRangeByLex
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZLexCount*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZLexCount
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZLexCount(System.String,System.String,System.String)
  name: ZLexCount
  nameWithType: IRedisClient<TOrder, TSortType>.ZLexCount
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZLexCount
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZLexCount
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZLexCount
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRemRangeByLex*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRemRangeByLex
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.ZRemRangeByLex(System.String,System.String,System.String)
  name: ZRemRangeByLex
  nameWithType: IRedisClient<TOrder, TSortType>.ZRemRangeByLex
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.ZRemRangeByLex
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).ZRemRangeByLex
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).ZRemRangeByLex
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HSet*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HSet
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HSet(System.String,System.String,System.String)
  name: HSet
  nameWithType: IRedisClient<TOrder, TSortType>.HSet
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.HSet
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).HSet
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).HSet
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HSetNX*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HSetNX
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HSetNX(System.String,System.String,System.String)
  name: HSetNX
  nameWithType: IRedisClient<TOrder, TSortType>.HSetNX
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.HSetNX
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).HSetNX
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).HSetNX
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HIncrby*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HIncrby
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HIncrby(System.String,System.String,System.Int32)
  name: HIncrby
  nameWithType: IRedisClient<TOrder, TSortType>.HIncrby
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.HIncrby
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).HIncrby
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).HIncrby
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HIncrbyFloat*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HIncrbyFloat
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HIncrbyFloat(System.String,System.String,System.Double)
  name: HIncrbyFloat
  nameWithType: IRedisClient<TOrder, TSortType>.HIncrbyFloat
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.HIncrbyFloat
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).HIncrbyFloat
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).HIncrbyFloat
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HGet*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HGet
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HGet(System.String,System.String)
  name: HGet
  nameWithType: IRedisClient<TOrder, TSortType>.HGet
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.HGet
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).HGet
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).HGet
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HMGet*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HMGet
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HMGet(System.String,System.String[])
  name: HMGet
  nameWithType: IRedisClient<TOrder, TSortType>.HMGet
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.HMGet
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).HMGet
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).HMGet
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HDel*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HDel
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HDel(System.String,System.String)
  name: HDel
  nameWithType: IRedisClient<TOrder, TSortType>.HDel
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.HDel
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).HDel
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).HDel
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HExists*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HExists
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HExists(System.String,System.String)
  name: HExists
  nameWithType: IRedisClient<TOrder, TSortType>.HExists
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.HExists
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).HExists
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).HExists
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HLen*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HLen
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HLen(System.String)
  name: HLen
  nameWithType: IRedisClient<TOrder, TSortType>.HLen
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.HLen
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).HLen
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).HLen
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HKeys*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HKeys
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HKeys(System.String)
  name: HKeys
  nameWithType: IRedisClient<TOrder, TSortType>.HKeys
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.HKeys
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).HKeys
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).HKeys
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HVals*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HVals
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HVals(System.String)
  name: HVals
  nameWithType: IRedisClient<TOrder, TSortType>.HVals
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.HVals
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).HVals
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).HVals
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HGetAll*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HGetAll
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.HGetAll(System.String)
  name: HGetAll
  nameWithType: IRedisClient<TOrder, TSortType>.HGetAll
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.HGetAll
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).HGetAll
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).HGetAll
- uid: System.Collections.Generic.IEnumerable{Cathay.SDK.Cloud.Interface.Redis.CHashEntry}
  commentId: T:System.Collections.Generic.IEnumerable{Cathay.SDK.Cloud.Interface.Redis.CHashEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<CHashEntry>
  nameWithType: IEnumerable<CHashEntry>
  fullName: System.Collections.Generic.IEnumerable<Cathay.SDK.Cloud.Interface.Redis.CHashEntry>
  nameWithType.vb: IEnumerable(Of CHashEntry)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Cathay.SDK.Cloud.Interface.Redis.CHashEntry)
  name.vb: IEnumerable(Of CHashEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Cathay.SDK.Cloud.Interface.Redis.CHashEntry
    name: CHashEntry
    href: Cathay.SDK.Cloud.Interface.Redis.CHashEntry.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Cathay.SDK.Cloud.Interface.Redis.CHashEntry
    name: CHashEntry
    href: Cathay.SDK.Cloud.Interface.Redis.CHashEntry.html
  - name: )
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Watch*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Watch
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.Watch(System.String[])
  name: Watch
  nameWithType: IRedisClient<TOrder, TSortType>.Watch
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.Watch
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).Watch
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).Watch
- uid: Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.UnWatch*
  commentId: Overload:Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.UnWatch
  href: Cathay.SDK.Cloud.Interface.Redis.IRedisClient-2.html#Cathay.SDK.Cloud.Interface.Redis.IRedisClient`2.UnWatch
  name: UnWatch
  nameWithType: IRedisClient<TOrder, TSortType>.UnWatch
  fullName: Cathay.SDK.Cloud.Interface.Redis.IRedisClient<TOrder, TSortType>.UnWatch
  nameWithType.vb: IRedisClient(Of TOrder, TSortType).UnWatch
  fullName.vb: Cathay.SDK.Cloud.Interface.Redis.IRedisClient(Of TOrder, TSortType).UnWatch
